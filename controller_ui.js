!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.ControllerUiLib=n():e.ControllerUiLib=n()}(self,(()=>(()=>{var __webpack_modules__={836:function(module){eval("/*! MIT License. Copyright 2015-2018 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */\n(function(root) {\n    \"use strict\";\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        // We cannot safely handle numbers beyond the safe range for integers\n        if (value > Number.MAX_SAFE_INTEGER) {\n            throw new Error('integer value out of safe range');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = parseInt(value / 256);\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (true) {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else {}\n\n\n})(this);\n\n\n//# sourceURL=webpack://ControllerUiLib/./node_modules/aes-js/index.js?")},950:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.ControllerSapiClassStatus = exports.ControllerSapiClass = void 0;\nconst aes_js_1 = __webpack_require__(836);\nconst uuid_1 = __webpack_require__(831);\nconst sapi_1 = __webpack_require__(925);\nconst utilities_1 = __webpack_require__(864);\nconst vendorIds_1 = __webpack_require__(128);\nvar ControllerSapiClassStatus;\n(function (ControllerSapiClassStatus) {\n    ControllerSapiClassStatus[ControllerSapiClassStatus["OK"] = 0] = "OK";\n    ControllerSapiClassStatus[ControllerSapiClassStatus["WRONG_LENGTH_CMD"] = 11] = "WRONG_LENGTH_CMD";\n    ControllerSapiClassStatus[ControllerSapiClassStatus["UNSUPPORT_CMD"] = 12] = "UNSUPPORT_CMD";\n    ControllerSapiClassStatus[ControllerSapiClassStatus["UNSUPPORT_SUB_CMD"] = 13] = "UNSUPPORT_SUB_CMD";\n    ControllerSapiClassStatus[ControllerSapiClassStatus["WRONG_IN_DATA"] = 14] = "WRONG_IN_DATA";\n    ControllerSapiClassStatus[ControllerSapiClassStatus["INVALID_ARG"] = 15] = "INVALID_ARG";\n    ControllerSapiClassStatus[ControllerSapiClassStatus["NOT_SET"] = 16] = "NOT_SET";\n    ControllerSapiClassStatus[ControllerSapiClassStatus["WRONG_OUT_STATUS"] = 17] = "WRONG_OUT_STATUS";\n    ControllerSapiClassStatus[ControllerSapiClassStatus["WRONG_OUT_SUB_CMD"] = 18] = "WRONG_OUT_SUB_CMD";\n    ControllerSapiClassStatus[ControllerSapiClassStatus["WRONG_SEQ"] = 19] = "WRONG_SEQ";\n    ControllerSapiClassStatus[ControllerSapiClassStatus["WRONG_CRC"] = 20] = "WRONG_CRC";\n    ControllerSapiClassStatus[ControllerSapiClassStatus["WRONG_LENGTH_SEQ"] = 21] = "WRONG_LENGTH_SEQ";\n    ControllerSapiClassStatus[ControllerSapiClassStatus["WRONG_LENGTH_CALLBACK"] = 22] = "WRONG_LENGTH_CALLBACK";\n    ControllerSapiClassStatus[ControllerSapiClassStatus["NOT_INIT"] = 23] = "NOT_INIT";\n    ControllerSapiClassStatus[ControllerSapiClassStatus["NOT_RAZBERRY"] = 24] = "NOT_RAZBERRY";\n    ControllerSapiClassStatus[ControllerSapiClassStatus["INVALID_SET"] = 25] = "INVALID_SET";\n})(ControllerSapiClassStatus || (exports.ControllerSapiClassStatus = ControllerSapiClassStatus = {}));\nvar ControllerSapiClassLockStatus;\n(function (ControllerSapiClassLockStatus) {\n    ControllerSapiClassLockStatus[ControllerSapiClassLockStatus["UNLOCKED"] = 0] = "UNLOCKED";\n    ControllerSapiClassLockStatus[ControllerSapiClassLockStatus["DBG_LOCKED"] = 1] = "DBG_LOCKED";\n    ControllerSapiClassLockStatus[ControllerSapiClassLockStatus["APP_LOCKED"] = 2] = "APP_LOCKED";\n    ControllerSapiClassLockStatus[ControllerSapiClassLockStatus["FULL_LOCKED"] = 3] = "FULL_LOCKED";\n})(ControllerSapiClassLockStatus || (ControllerSapiClassLockStatus = {}));\nclass ControllerSapiClass {\n    constructor() {\n        this.RAZ7_LICENSE_CMD = 0xF5;\n        this.RAZ7_LICENSE_CRC = 0x1D0F;\n        this.RAZ7_LICENSE_STATUS_OK = 0x00;\n        this.RAZ7_LICENSE_GET_SUBCMD = 0x00;\n        this.RAZ7_LICENSE_NONCE_SUBCMD = 0x02;\n        this.RAZ7_LICENSE_SET_SUBCMD = 0x01;\n        this.RAZ7_LICENSE_CMD_LEN = 0x30;\n        this.RAZ7_LICENSE_NONCE_LEN = 0x08;\n        this.RAZ7_LICENSE_IV_LEN = 0x10;\n        this.RAZ7_FLAG_OFFSET = 0x03;\n        this.RAZ7_FLAGS_SIZE = 0x08;\n        this.RAZ7_COUNT_SUPPORT_OFFSET = this.RAZ7_FLAG_OFFSET + this.RAZ7_FLAGS_SIZE;\n        this.license_flags = {\n            0x00: { name: "Controller Static API", title: "Enables static cotroller mode. User can switch Razberry to \\"staic\\" mode instead of default \\"bridge\\"", active: false },\n            0x01: { name: "Allow max RF power", title: "If set user can increase power amplifier up to 24dBm. Without that flag the user is limited by 7dBm", active: false },\n            0x02: { name: "Backup/Restore", title: "Enables backup/restore operations", active: false },\n            0x03: { name: "Battery save on sleeping", title: "If controller doesn\'t respond to WakeUp Notification, razberry responds itself with WakUp No more information. This prevents device battery discharge", active: false },\n            0x04: { name: "Advanced network diagnostics", title: "Enables backward RSSI dump and other extendended ZME features", active: false },\n            0x05: { name: "Z-Wave Long Range", title: "Enables Z-Wave Long Range support", active: false },\n            0x06: { name: "Fast communications", title: "Enables UART baudrate setting command", active: false },\n            0x07: { name: "Change vendor ID", title: "Maps subvendor to vendor field in controller information", active: false },\n            0x08: { name: "Promiscuous mode (Zniffer)", title: "Enables promisc functionality. Controller dumps all the packages in its network", active: false },\n            0x0A: { name: "RF jamming detection", title: "Enables jamming detection notifications", active: false },\n            0x0B: { name: "Zniffer in PTI mode", title: "Enables Packet Trace Interface. Device dumps all the packets it sends and receives. This uses external UART interface and doesn\'t consume time of the main core", active: false },\n            0x0C: { name: "Zniffer and Advanced Radio Tool", title: "Razberry works as direct transmitter", active: false },\n        };\n        this.region_array = [\n            "EU", "US", "ANZ", "HK", "IN", "IL", "RU", "CN", "US_LR", "JP", "KR"\n        ];\n        this.region_string_to_number = {\n            "EU": 0x00, "US": 0x01, "ANZ": 0x02, "HK": 0x03, "IN": 0x05, "IL": 0x06,\n            "RU": 0x07, "CN": 0x08, "US_LR": 0x09, "JP": 0x20, "KR": 0x21\n        };\n        this.region_number_to_string = {\n            0x00: "EU", 0x01: "US", 0x02: "ANZ", 0x03: "HK", 0x05: "IN", 0x06: "IL",\n            0x07: "RU", 0x08: "CN", 0x09: "US_LR", 0x20: "JP", 0x21: "KR", 0xFF: "EU"\n        };\n        this.sapi = new sapi_1.SapiClass();\n        this.raz_key = [0x86, 0x78, 0x02, 0x09, 0x8D, 0x89, 0x4D, 0x41, 0x8F, 0x3F, 0xD2, 0x04, 0x2E, 0xEC, 0xF5, 0xC4, 0x05, 0x8C, 0xB9, 0x36, 0xA9, 0xCC, 0x4B, 0x87, 0x91, 0x39, 0x36, 0xB7, 0x43, 0x18, 0x37, 0x42];\n        this.seqNo = 0x0;\n        this.capabilities = { status: ControllerSapiClassStatus.NOT_INIT, ApiVersion: 0x0, ApiRevision: 0x0, VendorID: 0x0, VendorIDName: "Unknown", cmd_mask: [] };\n        this.license = { status: ControllerSapiClassStatus.NOT_INIT, vallid: false, vendor_id: 0x0, max_nodes: 0x0, count_support: 0x0, flags: [], crc16: 0x0 };\n        this.board_info = { status: ControllerSapiClassStatus.NOT_INIT, core_version: 0x0, build_seq: 0x0, build_ts: 0x0, hw_revision: 0x0, sdk_version: 0x0, chip_uuid: [], sn_raw: [], bootloader_version: 0x0, bootloader_crc32: 0x0, lock_status: 0x0, lock_status_name: "" };\n    }\n    _set_seq() {\n        const seq = this.seqNo;\n        this.seqNo += 1;\n        this.seqNo &= 0XFF; // 1 byte\n        return (seq);\n    }\n    _test_cmd(cmd) {\n        if (this.capabilities.status != ControllerSapiClassStatus.OK)\n            return (false);\n        if (cmd <= 0x0)\n            return (false);\n        cmd--;\n        if ((cmd / 0x8) >= this.capabilities.cmd_mask.length)\n            return (false);\n        if ((this.capabilities.cmd_mask[(cmd - (cmd % 0x8)) / 0x8] & (0x1 << (cmd % 0x8))) == 0x0)\n            return (false);\n        return (true);\n    }\n    _serial_api_setup(sub, args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const out = { status: ControllerSapiClassStatus.OK, data: [] };\n            if (this._test_cmd(sapi_1.SapiClassFuncId.FUNC_ID_SERIAL_API_SETUP) == false) {\n                out.status = ControllerSapiClassStatus.UNSUPPORT_CMD;\n                return (out);\n            }\n            const serial_api_setup = yield this.sapi.sendCommandUnSz(sapi_1.SapiClassFuncId.FUNC_ID_SERIAL_API_SETUP, [sub].concat(args));\n            if (serial_api_setup.status != sapi_1.SapiClassStatus.OK) {\n                out.status = serial_api_setup.status;\n                return (out);\n            }\n            if (serial_api_setup.data.length < 0x1) {\n                out.status = ControllerSapiClassStatus.WRONG_LENGTH_CMD;\n                return (out);\n            }\n            if (serial_api_setup.data[0x0] == sapi_1.SapiClassSerialAPISetupCmd.SERIAL_API_SETUP_CMD_UNSUPPORTED) {\n                out.status = ControllerSapiClassStatus.UNSUPPORT_CMD;\n                return (out);\n            }\n            if (serial_api_setup.data[0x0] != sub) {\n                out.status = ControllerSapiClassStatus.UNSUPPORT_SUB_CMD;\n                return (out);\n            }\n            out.data = serial_api_setup.data.slice(0x1, serial_api_setup.data.length);\n            return (out);\n        });\n    }\n    _get_capabilities(out) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const capabilities_info = yield this.sapi.sendCommandUnSz(sapi_1.SapiClassFuncId.FUNC_ID_SERIAL_API_GET_CAPABILITIES, []);\n            if (capabilities_info.status != sapi_1.SapiClassStatus.OK) {\n                out.status = capabilities_info.status;\n                return;\n            }\n            if (capabilities_info.data.length <= 0x8) {\n                out.status = ControllerSapiClassStatus.WRONG_LENGTH_CMD;\n                return;\n            }\n            out.status = ControllerSapiClassStatus.OK;\n            out.ApiVersion = capabilities_info.data[0x0];\n            out.ApiRevision = capabilities_info.data[0x1];\n            out.VendorID = capabilities_info.data[0x2] << 0x8 | capabilities_info.data[0x3];\n            out.cmd_mask = capabilities_info.data.slice(0x8, capabilities_info.data.length);\n            if (Object.hasOwn(vendorIds_1.controller_vendor_ids, out.VendorID) == true) {\n                out.VendorIDName = vendorIds_1.controller_vendor_ids[out.VendorID].Name;\n                out.VendorIDWebpage = vendorIds_1.controller_vendor_ids[out.VendorID].Webpage;\n            }\n        });\n    }\n    _readNVM(addr, size) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.sapi.sendCommandUnSz(sapi_1.SapiClassFuncId.FUNC_ID_NVM_EXT_READ_LONG_BUFFER, [(addr >> 16) & 0xFF, (addr >> 8) & 0xFF, addr & 0xFF, (size >> 8) & 0xFF, size & 0xFF]));\n        });\n    }\n    _license_send(out, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let nonse_info;\n            const seq = this._set_seq();\n            nonse_info = yield this.sapi.sendCommandUnSz(this.RAZ7_LICENSE_CMD, data.concat([seq]));\n            if (nonse_info.status != sapi_1.SapiClassStatus.OK)\n                return nonse_info.status;\n            if (nonse_info.data.length < 0x1)\n                return (ControllerSapiClassStatus.WRONG_LENGTH_CMD);\n            if (nonse_info.data[0x0] != this.RAZ7_LICENSE_STATUS_OK)\n                return (ControllerSapiClassStatus.WRONG_OUT_STATUS);\n            nonse_info = yield this.sapi.recvIncomingRequest(1000);\n            if (nonse_info.status != sapi_1.SapiClassStatus.OK)\n                return nonse_info.status;\n            if (nonse_info.data.length < 0x1) //0x1 seq\n                return (ControllerSapiClassStatus.WRONG_LENGTH_SEQ);\n            if (nonse_info.data[0x0] != seq)\n                return (ControllerSapiClassStatus.WRONG_SEQ);\n            out.data = nonse_info.data.slice(0x1, nonse_info.data.length);\n            return (ControllerSapiClassStatus.OK);\n        });\n    }\n    _license_decrypt(data, iv) {\n        const aesCtr = new aes_js_1.ModeOfOperation.ofb(this.raz_key, iv);\n        const decryptedBytes = aesCtr.decrypt(data);\n        const crc16 = decryptedBytes[decryptedBytes.length - 0x2] | (decryptedBytes[decryptedBytes.length - 0x1] << 0x8);\n        if ((0, utilities_1.calcSigmaCRC16)(this.RAZ7_LICENSE_CRC, decryptedBytes, 0x0, decryptedBytes.length - 0x2) != crc16)\n            return (undefined);\n        return (Array.from(decryptedBytes));\n    }\n    _license_encrypt(sub_cmd, data, iv) {\n        const pack = [sub_cmd].concat(data);\n        while (pack.length < (this.RAZ7_LICENSE_CMD_LEN - 0x2))\n            pack.push(0xFF);\n        const crc = (0, utilities_1.calcSigmaCRC16)(this.RAZ7_LICENSE_CRC, pack, 0, pack.length);\n        pack.push(crc & 0xFF);\n        pack.push((crc >> 0x8) & 0xFF);\n        const aesCtr = new aes_js_1.ModeOfOperation.ofb(this.raz_key, iv);\n        const crypted = Array.from(aesCtr.encrypt(pack));\n        return (crypted);\n    }\n    _license_get_nonce(out) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const status = yield this._license_send(out, []);\n            if (status != ControllerSapiClassStatus.OK)\n                return (status);\n            if (out.data.length != this.RAZ7_LICENSE_CMD_LEN + this.RAZ7_LICENSE_IV_LEN)\n                return (ControllerSapiClassStatus.WRONG_LENGTH_CALLBACK);\n            const decrypt = this._license_decrypt(out.data.slice(0x0, 0x0 + this.RAZ7_LICENSE_CMD_LEN), out.data.slice(this.RAZ7_LICENSE_CMD_LEN, this.RAZ7_LICENSE_CMD_LEN + this.RAZ7_LICENSE_IV_LEN));\n            if (decrypt == undefined)\n                return (ControllerSapiClassStatus.WRONG_CRC);\n            if (decrypt.length < 0x2 + this.RAZ7_LICENSE_NONCE_LEN)\n                return (ControllerSapiClassStatus.WRONG_LENGTH_CALLBACK);\n            if (decrypt[0x0] != this.RAZ7_LICENSE_NONCE_SUBCMD)\n                return (ControllerSapiClassStatus.WRONG_OUT_STATUS);\n            if (decrypt[0x1] != this.RAZ7_LICENSE_STATUS_OK)\n                return (ControllerSapiClassStatus.WRONG_OUT_STATUS);\n            out.data = decrypt.slice(0x2, 0x2 + this.RAZ7_LICENSE_NONCE_LEN);\n            return (ControllerSapiClassStatus.OK);\n        });\n    }\n    _license(sub_cmd, data, out) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let status;\n            if (this._test_cmd(this.RAZ7_LICENSE_CMD) == false)\n                return (ControllerSapiClassStatus.UNSUPPORT_CMD);\n            if (this.isRazberry() == false)\n                return (ControllerSapiClassStatus.NOT_RAZBERRY);\n            status = yield this._license_get_nonce(out);\n            if (status != ControllerSapiClassStatus.OK)\n                return (status);\n            const iv_y = Array.from((0, uuid_1.parse)((0, uuid_1.v4)())).slice(0x0, 0x8);\n            const iv = out.data.concat(iv_y);\n            const crypted = this._license_encrypt(sub_cmd, data, iv);\n            status = yield this._license_send(out, crypted.concat(iv_y));\n            if (status != ControllerSapiClassStatus.OK)\n                return (status);\n            const decrypt = this._license_decrypt(out.data, iv);\n            if (decrypt == undefined)\n                return (ControllerSapiClassStatus.WRONG_CRC);\n            if (decrypt.length < 0x2)\n                return (ControllerSapiClassStatus.WRONG_LENGTH_CALLBACK);\n            if (decrypt[0x0] != sub_cmd)\n                return (ControllerSapiClassStatus.WRONG_OUT_SUB_CMD);\n            if (decrypt[0x1] != this.RAZ7_LICENSE_STATUS_OK)\n                return (ControllerSapiClassStatus.WRONG_OUT_STATUS);\n            out.data = decrypt.slice(0x2, decrypt.length);\n            return (ControllerSapiClassStatus.OK);\n        });\n    }\n    _license_decode(license_info, raw_license) {\n        let byte_i, bit_i;\n        if (raw_license.length < 32)\n            return;\n        raw_license = raw_license.slice(0, 32);\n        const crc16 = raw_license[raw_license.length - 0x2] | (raw_license[raw_license.length - 0x1] << 0x8);\n        if ((0, utilities_1.calcSigmaCRC16)(this.RAZ7_LICENSE_CRC, raw_license, 0x0, raw_license.length - 0x2) != crc16)\n            return;\n        license_info.crc16 = crc16;\n        license_info.vallid = true;\n        license_info.vendor_id = (raw_license[0x0] << 0x8) | raw_license[0x1];\n        license_info.max_nodes = raw_license[0x2];\n        license_info.count_support = (raw_license[this.RAZ7_COUNT_SUPPORT_OFFSET + 1] << 8) + raw_license[this.RAZ7_COUNT_SUPPORT_OFFSET];\n        byte_i = 0x0;\n        while (byte_i < this.RAZ7_FLAGS_SIZE) {\n            bit_i = 0x0;\n            while (bit_i < 0x8) {\n                if ((raw_license[this.RAZ7_FLAG_OFFSET + byte_i] & (0x1 << bit_i)) != 0x0) {\n                    if (Object.hasOwn(license_info.flags, byte_i * 0x8 + bit_i) == true)\n                        license_info.flags[byte_i * 0x8 + bit_i].active = true;\n                }\n                bit_i++;\n            }\n            byte_i++;\n        }\n        return;\n    }\n    _license_get(license_info) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const out = { data: [] };\n            license_info.flags = this.license_flags;\n            license_info.status = yield this._license(this.RAZ7_LICENSE_GET_SUBCMD, [], out);\n            if (license_info.status != ControllerSapiClassStatus.OK)\n                return;\n            this._license_decode(license_info, out.data);\n            return;\n        });\n    }\n    _get_board_info(out) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let lock_status_name;\n            if (this._test_cmd(sapi_1.SapiClassFuncId.FUNC_ID_NVM_EXT_READ_LONG_BUFFER) == false) {\n                out.status = ControllerSapiClassStatus.UNSUPPORT_CMD;\n                return;\n            }\n            const board_info = yield this._readNVM(0xFFFF00, 0x31);\n            if (board_info.status != sapi_1.SapiClassStatus.OK) {\n                out.status = board_info.status;\n                return;\n            }\n            const data = board_info.data;\n            if (data.length < 27) {\n                out.status = ControllerSapiClassStatus.WRONG_LENGTH_CMD;\n                return;\n            }\n            switch (data[51]) {\n                case ControllerSapiClassLockStatus.UNLOCKED:\n                    lock_status_name = "UNLOCKED";\n                    break;\n                case ControllerSapiClassLockStatus.DBG_LOCKED:\n                    lock_status_name = "DBG_LOCKED";\n                    break;\n                case ControllerSapiClassLockStatus.APP_LOCKED:\n                    lock_status_name = "APP_LOCKED";\n                    break;\n                case ControllerSapiClassLockStatus.FULL_LOCKED:\n                    lock_status_name = "FULL_LOCKED";\n                    break;\n                default:\n                    lock_status_name = "UNKNOWN";\n                    break;\n            }\n            out.status = ControllerSapiClassStatus.OK;\n            out.core_version = (0, utilities_1.costruct_int)(data.slice(0, 0 + 2), 2, false);\n            out.build_seq = (0, utilities_1.costruct_int)(data.slice(2, 2 + 4), 4, false);\n            out.build_ts = (0, utilities_1.costruct_int)(data.slice(6, 6 + 4), 4, false);\n            out.hw_revision = (0, utilities_1.costruct_int)(data.slice(10, 10 + 2), 2, false);\n            out.sdk_version = (0, utilities_1.costruct_int)(data.slice(12, 12 + 4), 4, false);\n            out.chip_uuid = data.slice(16, 16 + 8);\n            out.sn_raw = data.slice(24, 40);\n            out.bootloader_version = (0, utilities_1.costruct_int)(data.slice(40, 44), 4, false);\n            out.bootloader_crc32 = (0, utilities_1.costruct_int)(data.slice(44, 48), 4, false);\n            out.lock_status = data[48];\n            out.lock_status_name = lock_status_name;\n        });\n    }\n    getPower() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const power_get_out = { status: ControllerSapiClassStatus.OK, power_raw: 0x0, step: 0x1, min: 1, max: 247 };\n            if (this.isRazberry() == false) {\n                power_get_out.status = ControllerSapiClassStatus.NOT_RAZBERRY;\n                return (power_get_out);\n            }\n            const power_get = yield this._serial_api_setup(sapi_1.SapiClassSerialAPISetupCmd.SERIAL_API_SETUP_CMD_TX_POWERLEVEL_GET, []);\n            if (power_get.status != ControllerSapiClassStatus.OK) {\n                power_get_out.status = power_get.status;\n                return (power_get_out);\n            }\n            if (power_get.data.length < 0x2) {\n                power_get_out.status = ControllerSapiClassStatus.WRONG_LENGTH_CMD;\n                return (power_get_out);\n            }\n            if (power_get.data[0x1] != 0x0) {\n                power_get_out.status = ControllerSapiClassStatus.NOT_RAZBERRY;\n                return (power_get_out);\n            }\n            power_get_out.power_raw = power_get.data[0x0];\n            return (power_get_out);\n        });\n    }\n    setPower(power_raw) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isRazberry() == false)\n                return (ControllerSapiClassStatus.NOT_RAZBERRY);\n            const power_set = yield this._serial_api_setup(sapi_1.SapiClassSerialAPISetupCmd.SERIAL_API_SETUP_CMD_TX_POWERLEVEL_SET, [power_raw, 0x0]);\n            if (power_set.status != ControllerSapiClassStatus.OK)\n                return (power_set.status);\n            if (power_set.data.length < 0x1)\n                return (ControllerSapiClassStatus.WRONG_LENGTH_CMD);\n            if (power_set.data[0x1] == 0x0)\n                return (ControllerSapiClassStatus.INVALID_SET);\n            return (ControllerSapiClassStatus.OK);\n        });\n    }\n    getRegion() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const out = { status: ControllerSapiClassStatus.OK, region: "", region_array: this.region_array };\n            const rerion_get = yield this._serial_api_setup(sapi_1.SapiClassSerialAPISetupCmd.SERIAL_API_SETUP_CMD_RF_REGION_GET, []);\n            if (rerion_get.status != ControllerSapiClassStatus.OK) {\n                out.status = rerion_get.status;\n                return (out);\n            }\n            if (rerion_get.data.length < 0x1) {\n                out.status = ControllerSapiClassStatus.WRONG_LENGTH_CMD;\n                return (out);\n            }\n            if (Object.hasOwn(this.region_number_to_string, rerion_get.data[0x0]) == false) {\n                out.status = ControllerSapiClassStatus.WRONG_IN_DATA;\n                return (out);\n            }\n            out.region = this.region_number_to_string[rerion_get.data[0x0]];\n            return (out);\n        });\n    }\n    setRegion(region) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._test_cmd(sapi_1.SapiClassFuncId.FUNC_ID_SERIAL_API_SOFT_RESET) == false)\n                return (ControllerSapiClassStatus.UNSUPPORT_CMD);\n            if (Object.hasOwn(this.region_string_to_number, region) == false)\n                return (ControllerSapiClassStatus.INVALID_ARG);\n            const rerion_get = yield this._serial_api_setup(sapi_1.SapiClassSerialAPISetupCmd.SERIAL_API_SETUP_CMD_RF_REGION_SET, [this.region_string_to_number[region]]);\n            if (rerion_get.status != ControllerSapiClassStatus.OK)\n                return (rerion_get.status);\n            if (rerion_get.data.length < 0x1)\n                return (ControllerSapiClassStatus.WRONG_LENGTH_CMD);\n            if (rerion_get.data[0x0] == 0x0)\n                return (ControllerSapiClassStatus.NOT_SET);\n            const res = yield this.sapi.sendCommandUnSz(sapi_1.SapiClassFuncId.FUNC_ID_SERIAL_API_SOFT_RESET, []);\n            if (res.status != sapi_1.SapiClassStatus.OK)\n                return res.status;\n            return (ControllerSapiClassStatus.OK);\n        });\n    }\n    setDefault() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._test_cmd(sapi_1.SapiClassFuncId.FUNC_ID_ZW_SET_DEFAULT) == false)\n                return (ControllerSapiClassStatus.UNSUPPORT_CMD);\n            const seq = this._set_seq();\n            const res = yield this.sapi.sendCommandUnSz(sapi_1.SapiClassFuncId.FUNC_ID_ZW_SET_DEFAULT, [seq]);\n            if (res.status != sapi_1.SapiClassStatus.OK)\n                return res.status;\n            if (res.data.length < 0x1) //0x1 seq\n                return (ControllerSapiClassStatus.WRONG_LENGTH_SEQ);\n            if (res.data[0x0] != seq)\n                return (ControllerSapiClassStatus.WRONG_SEQ);\n            return (ControllerSapiClassStatus.OK);\n        });\n    }\n    getBoardInfo() {\n        return (this.board_info);\n    }\n    setLicense(license) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const out = { data: [] };\n            const status = yield this._license(this.RAZ7_LICENSE_SET_SUBCMD, license, out);\n            if (status != ControllerSapiClassStatus.OK)\n                return (status);\n            yield this._license_get(this.license);\n            return (this.license.status);\n        });\n    }\n    getLicense() {\n        return (this.license);\n    }\n    getCapabilities() {\n        return (this.capabilities);\n    }\n    isRazberry() {\n        if (this.capabilities.status != ControllerSapiClassStatus.OK)\n            return (false);\n        if (this.capabilities.VendorID == 0x0115 || this.capabilities.VendorID == 0x0147)\n            return (true);\n        return (false);\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._get_capabilities(this.capabilities);\n            if (this.capabilities.status != ControllerSapiClassStatus.OK)\n                return (false);\n            if (this.isRazberry() == true) {\n                yield this._license_get(this.license);\n                yield this._get_board_info(this.board_info);\n            }\n            return (true);\n        });\n    }\n    busy() {\n        return (this.sapi.busy());\n    }\n    supported() {\n        return (this.sapi.supported());\n    }\n    request() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (this.sapi.request());\n        });\n    }\n    open(baudRate) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (this.sapi.open(baudRate));\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.capabilities.status = ControllerSapiClassStatus.NOT_INIT;\n            this.license.status = ControllerSapiClassStatus.NOT_INIT;\n            this.board_info.status = ControllerSapiClassStatus.NOT_INIT;\n            return (this.sapi.close());\n        });\n    }\n}\nexports.ControllerSapiClass = ControllerSapiClass;\n\n\n//# sourceURL=webpack://ControllerUiLib/./src/controller_sapi.ts?')},783:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.ControllerUiClass = void 0;\nconst modal_js_1 = __webpack_require__(968);\nconst utilities_1 = __webpack_require__(864);\nconst controller_sapi_1 = __webpack_require__(950);\nclass ControllerUiClass {\n    _log(txt) {\n        this.el_modal_section_log_txt.innerHTML += txt;\n        this.el_modal_section_log_txt.scrollTop = this.el_modal_section_log_txt.scrollHeight;\n    }\n    _log_error(txt) {\n        this._log(\'<div class="ZUnoRazberryModal_color_error">\' + txt + "</div>");\n    }\n    _log_info(txt) {\n        this._log(\'<div class="ZUnoRazberryModal_color_info">\' + txt + "</div>");\n    }\n    _log_warning(txt) {\n        this._log(\'<div class="ZUnoRazberryModal_color_warning">\' + txt + "</div>");\n    }\n    _log_info_start(txt) {\n        this._log_info(txt + "...");\n    }\n    _log_info_done(txt) {\n        this._log_info(txt + " done");\n    }\n    _log_error_faled(txt) {\n        this._log_error(txt + " faled");\n    }\n    _log_error_faled_code(txt, code) {\n        this._log_error(txt + " faled: " + code);\n    }\n    _log_error_unsupport(txt) {\n        this._log_error(txt + " unsupported");\n    }\n    _log_error_not_find_el(txt) {\n        this._log_error("Not find el: " + txt);\n    }\n    _log_error_xhr_timeout(url) {\n        this._log_error("Internet request " + url + " - timeout");\n    }\n    _log_error_xhr_error(url) {\n        this._log_error("Internet request " + url + " - error");\n    }\n    _log_error_xhr_invalid_data(url) {\n        this._log_error("Internet request " + url + " - invalid data");\n    }\n    _destructors_license() {\n        if (this.new_license_timer.timer_id != undefined) {\n            window.clearTimeout(this.new_license_timer.timer_id);\n            this.new_license_timer.timer_id = undefined;\n        }\n        if (this.new_license_timer.xhr != undefined) {\n            this.new_license_timer.xhr.abort();\n            this.new_license_timer.xhr = undefined;\n        }\n        this.new_license_timer.crc16 = undefined;\n        this.new_license_timer.uuid_hex = undefined;\n    }\n    _destructors() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._destructors_license();\n            yield this.razberry.close();\n            this.el_modal.remove();\n        });\n    }\n    _is_busy() {\n        if (this.razberry.busy() == true) {\n            this._log_warning(this.MESSAGE_PLEASE_WAIT);\n            return (true);\n        }\n        return (false);\n    }\n    _close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._is_busy() == true)\n                return;\n            yield this._destructors();\n        });\n    }\n    _copy() {\n        let i, txt;\n        const childNodes = this.el_modal_section_log_txt.childNodes;\n        i = 0x0;\n        txt = "";\n        while (i < childNodes.length) {\n            const child = childNodes[i];\n            txt = txt + child.textContent + "\\n";\n            i++;\n        }\n        navigator.clipboard.writeText(txt);\n    }\n    _aplle_common_change(id, title, change) {\n        const find = \'[\' + id + \']\';\n        const el_apple = this.el_modal.querySelector(find);\n        if (el_apple == null) {\n            this._log_error_not_find_el(find);\n            return;\n        }\n        if (change == true) {\n            el_apple.setAttribute("disabled", "");\n            el_apple.removeAttribute("title");\n            return;\n        }\n        el_apple.setAttribute("title", title);\n        el_apple.removeAttribute("disabled");\n    }\n    _region_change(event) {\n        if (event.target == null)\n            return;\n        const el_target = event.target;\n        this.region_new = el_target.value;\n        this._aplle_common_change(this.SECTION_ID_BUTTON_APPLE_REGION, this.TABLE_NAME_REGION_BUTTON_TITLE, (this.region_new == this.region_current) ? true : false);\n    }\n    _region_apple() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._is_busy() == true)\n                return;\n            this._log_info_start(this.MESSAGE_SET_REGION);\n            const status = yield this.razberry.setRegion(this.region_new);\n            if (status == controller_sapi_1.ControllerSapiClassStatus.OK) {\n                this._log_info_done(this.MESSAGE_SET_REGION);\n                this.region_current = this.region_new;\n                this._aplle_common_change(this.SECTION_ID_BUTTON_APPLE_REGION, this.TABLE_NAME_REGION_BUTTON_TITLE, (this.region_new == this.region_current) ? true : false);\n                return;\n            }\n            this._log_error_faled_code(this.MESSAGE_SET_REGION, status);\n        });\n    }\n    _power_change(event) {\n        if (event.target == null)\n            return;\n        const el_target = event.target;\n        this.power_new = Number(el_target.value);\n        this._aplle_common_change(this.SECTION_ID_BUTTON_APPLE_POWER, this.TABLE_NAME_POWER_BUTTON_TITLE, (this.power_new == this.power_current) ? true : false);\n    }\n    _power_apple() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._is_busy() == true)\n                return;\n            this._log_info_start(this.MESSAGE_SET_POWER);\n            const status = yield this.razberry.setPower(this.power_new);\n            if (status == controller_sapi_1.ControllerSapiClassStatus.OK) {\n                this._log_info_done(this.MESSAGE_SET_POWER);\n                this.power_current = this.power_new;\n                this._aplle_common_change(this.SECTION_ID_BUTTON_APPLE_POWER, this.TABLE_NAME_POWER_BUTTON_TITLE, (this.power_new == this.power_current) ? true : false);\n                return;\n            }\n            this._log_error_faled_code(this.MESSAGE_SET_POWER, status);\n        });\n    }\n    _reset_default() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._is_busy() == true)\n                return;\n            this._log_info_start(this.MESSAGE_SET_DEFAULT);\n            const status = yield this.razberry.setDefault();\n            if (status == controller_sapi_1.ControllerSapiClassStatus.OK) {\n                this._log_info_done(this.MESSAGE_SET_DEFAULT);\n                return;\n            }\n            this._log_error_faled_code(this.MESSAGE_SET_DEFAULT, status);\n        });\n    }\n    _html_event(el, data) {\n        const list = el.querySelectorAll(\'[data-\' + data + \']\');\n        list.forEach((item) => {\n            const value = item.getAttribute(\'data-\' + data);\n            if (value == null)\n                return;\n            item.addEventListener(data, () => {\n                eval("this." + value);\n            });\n        });\n    }\n    _create_table_element(find, name, value, action, title) {\n        const el_tr = document.createElement("tr");\n        const el_td_1 = document.createElement("td");\n        const el_td_2 = document.createElement("td");\n        const el_td_3 = document.createElement("td");\n        el_td_1.title = title;\n        el_td_1.innerHTML = name;\n        el_td_2.innerHTML = value;\n        el_td_3.innerHTML = action;\n        el_tr.appendChild(el_td_1);\n        el_tr.appendChild(el_td_2);\n        el_tr.appendChild(el_td_3);\n        const tbody = this.el_modal.querySelector(find);\n        if (tbody == null) {\n            this._log_error_not_find_el(find);\n            return (el_tr);\n        }\n        tbody.appendChild(el_tr);\n        return (el_tr);\n    }\n    _create_table_element_controler_info(name, value, action = "", title = "") {\n        return (this._create_table_element(this.SECTION_ID_DATA_CONTROLLER_INFO_TBODY, name, value, action, title));\n    }\n    _create_table_element_license_info(name, value, action = "", title = "") {\n        return (this._create_table_element(this.SECTION_ID_DATA_LICENSE_INFO_TBODY, name, value, action, title));\n    }\n    _connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let i;\n            this._log_info_start(this.MESSAGE_CONNECT);\n            i = 0x0;\n            while (i < this.BAUDRATE.length) {\n                if ((yield this.razberry.open(this.BAUDRATE[i])) == false) {\n                    this._log_error(this.MESSAGE_PORT_USE);\n                    return (false);\n                }\n                if ((yield this.razberry.connect()) == true) {\n                    this._log_info_done(this.MESSAGE_CONNECT);\n                    return (true);\n                }\n                yield this.razberry.close();\n                yield (0, utilities_1.sleep)(this.dtr_timeout); // The time for the capacitor on the DTR line to recharge\n                i++;\n            }\n            this._log_error_faled(this.MESSAGE_CONNECT);\n            return (false);\n        });\n    }\n    _start_display(find, display) {\n        const id_controller_info = this.el_modal.querySelector(find);\n        if (id_controller_info == null) {\n            this._log_error_not_find_el(find);\n            return (false);\n        }\n        id_controller_info.style.display = display;\n        return (true);\n    }\n    _start_clear(find) {\n        const tbody = this.el_modal.querySelector(find);\n        if (tbody == null) {\n            this._log_error_not_find_el(find);\n            return (false);\n        }\n        tbody.innerHTML = "";\n        return (true);\n    }\n    _get_capabilities() {\n        this._log_info_start(this.MESSAGE_READ_CAPABILITIES);\n        const capabilities_info = this.razberry.getCapabilities();\n        if (capabilities_info.status != controller_sapi_1.ControllerSapiClassStatus.OK) {\n            this._log_error_faled_code(this.MESSAGE_READ_CAPABILITIES, capabilities_info.status);\n            return (false);\n        }\n        this._create_table_element_controler_info(this.TABLE_NAME_SERIAL_API_VERSION, capabilities_info.ApiVersion + "." + capabilities_info.ApiRevision, "", this.TABLE_NAME_SERIAL_API_VERSION_TITLE);\n        if (capabilities_info.VendorIDWebpage == undefined)\n            this._create_table_element_controler_info(this.TABLE_NAME_VENDOR, capabilities_info.VendorIDName, "", this.TABLE_NAME_VENDOR_TITLE);\n        else\n            this._create_table_element_controler_info(this.TABLE_NAME_VENDOR, \'<a target="_blank" href="\' + capabilities_info.VendorIDWebpage + \'">\' + capabilities_info.VendorIDName + \'</a>\', "", this.TABLE_NAME_VENDOR_TITLE);\n        this._create_table_element_controler_info(this.TABLE_NAME_VENDOR_ID, String(capabilities_info.VendorID), "", this.TABLE_NAME_VENDOR_ID_TITLE);\n        this._log_info_done(this.MESSAGE_READ_CAPABILITIES);\n        return (true);\n    }\n    _get_region() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let i, el_str, el_button_str;\n            this._log_info_start(this.MESSAGE_READ_REGION);\n            const region_info = yield this.razberry.getRegion();\n            switch (region_info.status) {\n                case controller_sapi_1.ControllerSapiClassStatus.OK:\n                    this.region_current = region_info.region;\n                    this.region_new = region_info.region;\n                    this._log_info_done(this.MESSAGE_READ_REGION);\n                    i = 0x0;\n                    el_str = "";\n                    while (i < region_info.region_array.length) {\n                        if (region_info.region_array[i] == region_info.region) {\n                            el_str = el_str + \'<option selected="true">\' + region_info.region_array[i] + \'</option>\';\n                        }\n                        else {\n                            el_str = el_str + \'<option>\' + region_info.region_array[i] + \'</option>\';\n                        }\n                        i++;\n                    }\n                    el_str = \'<select title="\' + this.TABLE_NAME_REGION_SELECT_TITLE + \'" data-change="_region_change(event)">\' + el_str + \'</select>\';\n                    el_button_str = \'<button \' + this.SECTION_ID_BUTTON_APPLE_REGION + \' data-click="_region_apple()" disabled type="button">\' + this.TABLE_NAME_REGION_BUTTON + \'</button>\';\n                    this._create_table_element_controler_info(this.TABLE_NAME_REGION, el_str, el_button_str, this.TABLE_NAME_REGION_TITLE);\n                    return (true);\n                    break;\n                case controller_sapi_1.ControllerSapiClassStatus.UNSUPPORT_CMD:\n                    this._log_error_unsupport(this.MESSAGE_READ_REGION);\n                    break;\n                default:\n                    this._log_error_faled_code(this.MESSAGE_READ_REGION, region_info.status);\n                    break;\n            }\n            return (false);\n        });\n    }\n    _get_power() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.razberry.isRazberry() == false)\n                return (false);\n            this._log_info_start(this.MESSAGE_READ_POWER);\n            const power = yield this.razberry.getPower();\n            if (power.status != controller_sapi_1.ControllerSapiClassStatus.OK) {\n                this._log_error_faled_code(this.MESSAGE_READ_POWER, power.status);\n                return (false);\n            }\n            this.power_current = power.power_raw;\n            const el_value = \'<input title="\' + this.TABLE_NAME_POWER_SELECT_TITLE + \'" type="number"\' + \' data-change="_power_change(event)"\' + \' min="\' + power.min.toString() + \'" max="\' + power.max.toString() + \'" step="\' + +power.step.toString() + \'" value="\' + power.power_raw.toString() + \'"><span></span>\';\n            const el_action = \'<button \' + this.SECTION_ID_BUTTON_APPLE_POWER + \' data-click="_power_apple()" disabled type="button">\' + this.TABLE_NAME_POWER_BUTTON + \'</button>\';\n            this._create_table_element_controler_info(this.TABLE_NAME_POWER, el_value, el_action, this.TABLE_NAME_POWER_TITLE);\n            this._log_info_done(this.MESSAGE_READ_POWER);\n            return (true);\n        });\n    }\n    _get_controller_default() {\n        const value = \'<button class="ZUnoRazberryModal_color_warning_info" data-click="_reset_default()" title="\' + this.TABLE_NAME_RESET_DEFAULT_BUTTON_TITLE + \'" type="button">\' + this.TABLE_NAME_RESET_DEFAULT_BUTTON + \'</button>\';\n        this._create_table_element_controler_info(this.TABLE_NAME_RESET_DEFAULT, "", value, this.TABLE_NAME_RESET_DEFAULT_TITLE);\n        return (true);\n    }\n    _start_controller_info() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let display;\n            display = false;\n            if (this._get_capabilities() == true)\n                display = true;\n            if ((yield this._get_region()) == true)\n                display = true;\n            if ((yield this._get_power()) == true)\n                display = true;\n            if (this._get_controller_default() == true)\n                display = true;\n            if (display == false)\n                return;\n            this._start_display(this.SECTION_ID_DATA_CONTROLLER_INFO, "");\n        });\n    }\n    _get_license() {\n        let key, flag_status;\n        this._log_info_start(this.MESSAGE_READ_LICENSE);\n        const license = this.razberry.getLicense();\n        if (license.status != controller_sapi_1.ControllerSapiClassStatus.OK) {\n            this._log_error_faled_code(this.MESSAGE_READ_LICENSE, license.status);\n            return (false);\n        }\n        if (license.vallid == true) {\n            this._create_table_element_license_info(this.TABLE_NAME_LICENSE_SUBVENDOR_ID, String(license.vendor_id), "", this.TABLE_NAME_LICENSE_SUBVENDOR_ID_TITLE);\n            this._create_table_element_license_info(this.TABLE_NAME_LICENSE_MAX_NODE, String(license.max_nodes), "", this.TABLE_NAME_LICENSE_MAX_NODE_TITLE);\n            this._create_table_element_license_info(this.TABLE_NAME_LICENSE_SUPPORT, String(license.count_support), "", this.TABLE_NAME_LICENSE_SUPPORT_TITLE);\n            this.new_license_timer.crc16 = license.crc16;\n        }\n        else\n            this.new_license_timer.crc16 = 0x0;\n        for (key in license.flags) {\n            if (license.flags[key].active == true)\n                flag_status = this.TABLE_NAME_LICENSE_YES;\n            else\n                flag_status = this.TABLE_NAME_LICENSE_NO;\n            this._create_table_element_license_info(license.flags[key].name + ":", flag_status, "", license.flags[key].title);\n        }\n        this._log_info_done(this.MESSAGE_READ_LICENSE);\n        return (true);\n    }\n    _array_to_string_hex(data) {\n        let str_hex, i;\n        str_hex = "";\n        i = 0x0;\n        while (i < data.length) {\n            str_hex = str_hex + data[i].toString(0x10);\n            i++;\n        }\n        return (str_hex);\n    }\n    _get_board_info() {\n        this._log_info_start(this.MESSAGE_READ_BOARD_INFO);\n        const board_info = this.razberry.getBoardInfo();\n        if (board_info.status != controller_sapi_1.ControllerSapiClassStatus.OK) {\n            this._log_error_faled_code(this.MESSAGE_READ_BOARD_INFO, board_info.status);\n            return (false);\n        }\n        const uuid_str_hex = this._array_to_string_hex(board_info.chip_uuid);\n        this.new_license_timer.uuid_hex = uuid_str_hex;\n        this._create_table_element_license_info(this.TABLE_NAME_LICENSE_UUID, uuid_str_hex, "", this.TABLE_NAME_LICENSE_UUID_TITLE);\n        const more_options_link = \'<a target="_blank" href="\' + this.TABLE_NAME_LICENSE_MORE_OPTIONS_LINK + uuid_str_hex + \'">\' + \'link\' + \'</a>\';\n        this._create_table_element_license_info(this.TABLE_NAME_LICENSE_MORE_OPTIONS, more_options_link, "", this.TABLE_NAME_LICENSE_MORE_OPTIONS_TITLE);\n        this._log_info_done(this.MESSAGE_READ_BOARD_INFO);\n        return (true);\n    }\n    _license_timer_valid_data(in_json) {\n        if (Object.hasOwn(in_json, "crc") == false || Object.hasOwn(in_json, "uuid") == false || Object.hasOwn(in_json, "license") == false)\n            return (false);\n        if (typeof (in_json.crc) != "string")\n            return (false);\n        if (typeof (in_json.license) != "string")\n            return (false);\n        if (typeof (in_json.uuid) != "string")\n            return (false);\n        return (true);\n    }\n    _license_timer_get_pack(in_json) {\n        if (this.new_license_timer.crc16 == undefined || this.new_license_timer.uuid_hex == undefined)\n            return (undefined);\n        if (this.new_license_timer.uuid_hex.toLowerCase() != in_json.uuid.toLowerCase())\n            return (undefined);\n        const crc16 = Number(in_json.crc);\n        if (crc16 == 0x0)\n            return (undefined);\n        if (crc16 == this.new_license_timer.crc16)\n            return (undefined);\n        return (in_json.license);\n    }\n    _license_timer() {\n        if (this.new_license_timer.crc16 == undefined || this.new_license_timer.uuid_hex == undefined)\n            return;\n        this.new_license_timer.xhr = new XMLHttpRequest();\n        const url = this.TABLE_NAME_LICENSE_SERVISE_LINK + this.new_license_timer.uuid_hex;\n        const fun_xhr_timer = () => {\n            this.new_license_timer.timer_id = undefined;\n            if (this.new_license_timer.xhr == undefined)\n                return;\n            this.new_license_timer.xhr.open("POST", url, true);\n            this.new_license_timer.xhr.responseType = \'json\';\n            this.new_license_timer.xhr.timeout = this.ms_timeout_get_new_license_xhr;\n            this.new_license_timer.xhr.ontimeout = () => {\n                this.new_license_timer.timer_id = window.setTimeout(fun_xhr_timer, this.ms_timeout_get_new_license);\n                this._log_error_xhr_timeout(url);\n            };\n            this.new_license_timer.xhr.onerror = () => {\n                this.new_license_timer.timer_id = window.setTimeout(fun_xhr_timer, this.ms_timeout_get_new_license);\n                this._log_error_xhr_error(url);\n            };\n            this.new_license_timer.xhr.onload = () => {\n                if (this.new_license_timer.xhr == undefined)\n                    return;\n                const in_json = this.new_license_timer.xhr.response;\n                if (this._license_timer_valid_data(in_json) == false) {\n                    this.new_license_timer.timer_id = window.setTimeout(fun_xhr_timer, this.ms_timeout_get_new_license);\n                    this._log_error_xhr_invalid_data(url);\n                    return;\n                }\n                const pack = this._license_timer_get_pack(in_json);\n                if (pack == undefined) {\n                    this.new_license_timer.timer_id = window.setTimeout(fun_xhr_timer, this.ms_timeout_get_new_license);\n                    return;\n                }\n                const pack_array = (0, utilities_1.hexToBytes)(pack);\n                if (pack_array == undefined) {\n                    this.new_license_timer.timer_id = window.setTimeout(fun_xhr_timer, this.ms_timeout_get_new_license);\n                    this._log_error_xhr_invalid_data(url);\n                    return;\n                }\n                const fun_controller_timer = () => __awaiter(this, void 0, void 0, function* () {\n                    this.new_license_timer.timer_id = undefined;\n                    this._log_info_start(this.MESSAGE_SET_LICENSE);\n                    if (this.razberry.busy() == true) {\n                        this._log_warning(this.MESSAGE_PLEASE_WAIT);\n                        this.new_license_timer.timer_id = window.setTimeout(fun_controller_timer, this.ms_timeout_get_new_license_port);\n                        return;\n                    }\n                    const status = yield this.razberry.setLicense(pack_array);\n                    if (status != controller_sapi_1.ControllerSapiClassStatus.OK) {\n                        this._log_error_faled_code(this.MESSAGE_SET_LICENSE, status);\n                        this.new_license_timer.timer_id = window.setTimeout(fun_controller_timer, this.ms_timeout_get_new_license_port);\n                        return;\n                    }\n                    this._log_info_done(this.MESSAGE_SET_LICENSE);\n                    this.new_license_timer.timer_id = window.setTimeout(fun_xhr_timer, this.ms_timeout_get_new_license);\n                    this._start_license_info();\n                });\n                this.new_license_timer.timer_id = window.setTimeout(fun_controller_timer, 0x0);\n            };\n            this.new_license_timer.xhr.send();\n        };\n        this.new_license_timer.timer_id = window.setTimeout(fun_xhr_timer, 0x0);\n    }\n    _start_license_info() {\n        let display;\n        if (this._start_display(this.SECTION_ID_DATA_LICENSE_INFO, "none") == false)\n            return;\n        this._destructors_license();\n        if (this._start_clear(this.SECTION_ID_DATA_LICENSE_INFO_TBODY) == false)\n            return;\n        display = false;\n        if (this._get_board_info() == true)\n            display = true;\n        if (this._get_license() == true)\n            display = true;\n        if (display == false)\n            return;\n        this._license_timer();\n        this._start_display(this.SECTION_ID_DATA_LICENSE_INFO, "");\n    }\n    _start() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.razberry.supported() == false)\n                return (this._log_error(this.MESSAGE_NOT_SUPPORT_BROWSER));\n            this._log_info(this.MESSAGE_VERSION_LOG);\n            if ((yield this.razberry.request()) == false)\n                return (this._log_error(this.MESSAGE_PORT_NOT_SELECT));\n            if ((yield this._connect()) == false)\n                return;\n            yield this._start_controller_info();\n            if (this.razberry.isRazberry() == true)\n                this._start_license_info();\n            this._html_event(this.el_modal, "change");\n            this._html_event(this.el_modal, "click");\n        });\n    }\n    constructor(el) {\n        this.MESSAGE_NOT_SUPPORT_BROWSER = "Sorry, this feature is supported only on Chrome, Edge and Opera";\n        this.MESSAGE_PORT_NOT_SELECT = "No port selected";\n        this.MESSAGE_PORT_USE = "Check yours, maybe another application is using it";\n        this.MESSAGE_CONNECT = "Connect controller";\n        this.MESSAGE_READ_CAPABILITIES = "Read capabilities the controller";\n        this.MESSAGE_READ_REGION = "Read region the controller";\n        this.MESSAGE_READ_POWER = "Read power the controller";\n        this.MESSAGE_READ_LICENSE = "Read license the controller";\n        this.MESSAGE_SET_LICENSE = "Set license the controller";\n        this.MESSAGE_READ_BOARD_INFO = "Read board info the controller";\n        this.MESSAGE_SET_REGION = "Set region the controller";\n        this.MESSAGE_SET_POWER = "Set power the controller";\n        this.MESSAGE_SET_DEFAULT = "Set default the controller";\n        this.MESSAGE_PLEASE_WAIT = "Please wait until the previous operation is completed.";\n        this.MESSAGE_VERSION_LOG = "SerialAPIWebTools version 0.0.1";\n        this.TABLE_NAME_SERIAL_API_VERSION = "Serial API Version:";\n        this.TABLE_NAME_SERIAL_API_VERSION_TITLE = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";\n        this.TABLE_NAME_VENDOR = "Vendor:";\n        this.TABLE_NAME_VENDOR_TITLE = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";\n        this.TABLE_NAME_VENDOR_ID = "Vendor id:";\n        this.TABLE_NAME_VENDOR_ID_TITLE = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";\n        this.TABLE_NAME_REGION = "Region:";\n        this.TABLE_NAME_REGION_TITLE = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";\n        this.TABLE_NAME_REGION_SELECT_TITLE = "Select region";\n        this.TABLE_NAME_REGION_BUTTON = "Apple";\n        this.TABLE_NAME_REGION_BUTTON_TITLE = "Apple select region";\n        this.TABLE_NAME_RESET_DEFAULT = "Reset default:";\n        this.TABLE_NAME_RESET_DEFAULT_TITLE = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";\n        this.TABLE_NAME_RESET_DEFAULT_BUTTON = "Reset";\n        this.TABLE_NAME_RESET_DEFAULT_BUTTON_TITLE = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";\n        this.TABLE_NAME_POWER = "Power:";\n        this.TABLE_NAME_POWER_TITLE = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";\n        this.TABLE_NAME_POWER_SELECT_TITLE = "Select power";\n        this.TABLE_NAME_POWER_BUTTON = "Apple";\n        this.TABLE_NAME_POWER_BUTTON_TITLE = "Apple select power";\n        this.TABLE_NAME_LICENSE_UUID = "Uuid:";\n        this.TABLE_NAME_LICENSE_UUID_TITLE = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";\n        this.TABLE_NAME_LICENSE_MORE_OPTIONS = "More options:";\n        this.TABLE_NAME_LICENSE_MORE_OPTIONS_TITLE = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";\n        this.TABLE_NAME_LICENSE_MORE_OPTIONS_LINK = "https://z-wave.me/hardware-capabilities/?uuid=";\n        this.TABLE_NAME_LICENSE_SERVISE_LINK = "https://service.z-wave.me/hardware/capabilities/?uuid=";\n        this.TABLE_NAME_LICENSE_SUBVENDOR_ID = "Subvendor:";\n        this.TABLE_NAME_LICENSE_SUBVENDOR_ID_TITLE = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";\n        this.TABLE_NAME_LICENSE_MAX_NODE = "Nodes limit:";\n        this.TABLE_NAME_LICENSE_MAX_NODE_TITLE = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";\n        this.TABLE_NAME_LICENSE_SUPPORT = "Support:";\n        this.TABLE_NAME_LICENSE_SUPPORT_TITLE = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";\n        this.TABLE_NAME_LICENSE_YES = \'<input disabled="disabled" checked type="checkbox">\';\n        this.TABLE_NAME_LICENSE_NO = \'<input disabled="disabled" type="checkbox">\';\n        this.SECTION_ID_BUTTON_APPLE_REGION = \'data-id_apple_region\';\n        this.SECTION_ID_BUTTON_APPLE_POWER = \'data-id_apple_power\';\n        this.SECTION_ID_DATA_LICENSE_INFO = \'[data-id_license_info]\';\n        this.SECTION_ID_DATA_LICENSE_INFO_TBODY = this.SECTION_ID_DATA_LICENSE_INFO + \' tbody\';\n        this.SECTION_ID_DATA_CONTROLLER_INFO = \'[data-id_controller_info]\';\n        this.SECTION_ID_DATA_CONTROLLER_INFO_TBODY = this.SECTION_ID_DATA_CONTROLLER_INFO + \' tbody\';\n        this.BAUDRATE = [115200, 230400, 460800, 921600];\n        this.dtr_timeout = 250;\n        this.ms_timeout_get_new_license = 10000;\n        this.ms_timeout_get_new_license_xhr = 2000;\n        this.ms_timeout_get_new_license_port = 1000;\n        this.region_current = "";\n        this.region_new = "";\n        this.power_current = 0x0;\n        this.power_new = 0x0;\n        this.razberry = new controller_sapi_1.ControllerSapiClass();\n        this.new_license_timer = {};\n        this.el_modal = document.createElement("div");\n        this.el_modal.className = "ZUnoRazberryModal";\n        this.el_modal.innerHTML = modal_js_1.html_modal;\n        this._html_event(this.el_modal, "click");\n        const list_el_log = this.el_modal.getElementsByClassName("ZUnoRazberryModalContentSectionLog_section_txt");\n        this.el_modal_section_log_txt = list_el_log[0x0];\n        el.appendChild(this.el_modal);\n        this._start();\n    }\n}\nexports.ControllerUiClass = ControllerUiClass;\n\n\n//# sourceURL=webpack://ControllerUiLib/./src/controller_ui.ts?')},925:function(__unused_webpack_module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.SapiClassSerialAPISetupCmd = exports.SapiClassFuncId = exports.SapiClassStatus = exports.SapiClass = void 0;\nconst utilities_1 = __webpack_require__(864);\nvar SapiClassStatus;\n(function (SapiClassStatus) {\n    SapiClassStatus[SapiClassStatus["OK"] = 0] = "OK";\n    SapiClassStatus[SapiClassStatus["NO_ACK"] = 1] = "NO_ACK";\n    SapiClassStatus[SapiClassStatus["INVALID_DATA_LEN"] = 2] = "INVALID_DATA_LEN";\n    SapiClassStatus[SapiClassStatus["INVALID_CRC"] = 3] = "INVALID_CRC";\n    SapiClassStatus[SapiClassStatus["NO_SOF"] = 4] = "NO_SOF";\n    SapiClassStatus[SapiClassStatus["NO_LENGHT"] = 5] = "NO_LENGHT";\n    SapiClassStatus[SapiClassStatus["WRITE"] = 6] = "WRITE";\n    SapiClassStatus[SapiClassStatus["WRONG_LENGHT"] = 7] = "WRONG_LENGHT";\n    SapiClassStatus[SapiClassStatus["WRONG_CMD"] = 8] = "WRONG_CMD";\n    SapiClassStatus[SapiClassStatus["PORT_NOT_OPEN"] = 9] = "PORT_NOT_OPEN";\n    SapiClassStatus[SapiClassStatus["PORT_BUSY"] = 10] = "PORT_BUSY";\n    SapiClassStatus[SapiClassStatus["LAST_STATUS"] = 11] = "LAST_STATUS";\n})(SapiClassStatus || (exports.SapiClassStatus = SapiClassStatus = {}));\nvar SapiClassSerialAPISetupCmd;\n(function (SapiClassSerialAPISetupCmd) {\n    //   /**\n    //    * The first 8 commands are given as bit-flags, and when all bits were consumed, a byte-array was created to give\n    //    * more room.\n    //    * The first 8 flags are the only ones that shall be used to fill the first byte when generating the response in\n    //    * pOutputBuffer for the command, SERIAL_API_SETUP_CMD_SUPPORTED.\n    //    * This is kept for backwards compatibility.\n    //    */\n    SapiClassSerialAPISetupCmd[SapiClassSerialAPISetupCmd["SERIAL_API_SETUP_CMD_UNSUPPORTED"] = 0] = "SERIAL_API_SETUP_CMD_UNSUPPORTED";\n    SapiClassSerialAPISetupCmd[SapiClassSerialAPISetupCmd["SERIAL_API_SETUP_CMD_SUPPORTED"] = 1] = "SERIAL_API_SETUP_CMD_SUPPORTED";\n    SapiClassSerialAPISetupCmd[SapiClassSerialAPISetupCmd["SERIAL_API_SETUP_CMD_TX_STATUS_REPORT"] = 2] = "SERIAL_API_SETUP_CMD_TX_STATUS_REPORT";\n    SapiClassSerialAPISetupCmd[SapiClassSerialAPISetupCmd["SERIAL_API_SETUP_CMD_TX_POWERLEVEL_SET"] = 4] = "SERIAL_API_SETUP_CMD_TX_POWERLEVEL_SET";\n    SapiClassSerialAPISetupCmd[SapiClassSerialAPISetupCmd["SERIAL_API_SETUP_CMD_TX_POWERLEVEL_GET"] = 8] = "SERIAL_API_SETUP_CMD_TX_POWERLEVEL_GET";\n    SapiClassSerialAPISetupCmd[SapiClassSerialAPISetupCmd["SERIAL_API_SETUP_CMD_TX_GET_MAX_PAYLOAD_SIZE"] = 16] = "SERIAL_API_SETUP_CMD_TX_GET_MAX_PAYLOAD_SIZE";\n    SapiClassSerialAPISetupCmd[SapiClassSerialAPISetupCmd["SERIAL_API_SETUP_CMD_RF_REGION_GET"] = 32] = "SERIAL_API_SETUP_CMD_RF_REGION_GET";\n    SapiClassSerialAPISetupCmd[SapiClassSerialAPISetupCmd["SERIAL_API_SETUP_CMD_RF_REGION_SET"] = 64] = "SERIAL_API_SETUP_CMD_RF_REGION_SET";\n    SapiClassSerialAPISetupCmd[SapiClassSerialAPISetupCmd["SERIAL_API_SETUP_CMD_NODEID_BASETYPE_SET"] = 128] = "SERIAL_API_SETUP_CMD_NODEID_BASETYPE_SET";\n    //   /**\n    //    * The below values are not flags and shall only be used with BITMASK_ADD_CMD() when generating\n    //    * the response for the command, SERIAL_API_SETUP_CMD_SUPPORTED.\n    //    */\n    SapiClassSerialAPISetupCmd[SapiClassSerialAPISetupCmd["SERIAL_API_SETUP_CMD_MAX_LR_TX_PWR_SET"] = 3] = "SERIAL_API_SETUP_CMD_MAX_LR_TX_PWR_SET";\n    SapiClassSerialAPISetupCmd[SapiClassSerialAPISetupCmd["SERIAL_API_SETUP_CMD_MAX_LR_TX_PWR_GET"] = 5] = "SERIAL_API_SETUP_CMD_MAX_LR_TX_PWR_GET";\n    // The values 6 and 7 are unused, but not reserved.\n    SapiClassSerialAPISetupCmd[SapiClassSerialAPISetupCmd["SERIAL_API_SETUP_CMD_TX_GET_MAX_LR_PAYLOAD_SIZE"] = 17] = "SERIAL_API_SETUP_CMD_TX_GET_MAX_LR_PAYLOAD_SIZE";\n    SapiClassSerialAPISetupCmd[SapiClassSerialAPISetupCmd["SERIAL_API_SETUP_CMD_TX_POWERLEVEL_SET_16_BIT"] = 18] = "SERIAL_API_SETUP_CMD_TX_POWERLEVEL_SET_16_BIT";\n    SapiClassSerialAPISetupCmd[SapiClassSerialAPISetupCmd["SERIAL_API_SETUP_CMD_TX_POWERLEVEL_GET_16_BIT"] = 19] = "SERIAL_API_SETUP_CMD_TX_POWERLEVEL_GET_16_BIT";\n})(SapiClassSerialAPISetupCmd || (exports.SapiClassSerialAPISetupCmd = SapiClassSerialAPISetupCmd = {}));\nvar SapiClassFuncId;\n(function (SapiClassFuncId) {\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_SERIAL_API_GET_INIT_DATA"] = 2] = "FUNC_ID_SERIAL_API_GET_INIT_DATA";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_SERIAL_API_APPL_NODE_INFORMATION"] = 3] = "FUNC_ID_SERIAL_API_APPL_NODE_INFORMATION";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_APPLICATION_COMMAND_HANDLER"] = 4] = "FUNC_ID_APPLICATION_COMMAND_HANDLER";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_GET_CONTROLLER_CAPABILITIES"] = 5] = "FUNC_ID_ZW_GET_CONTROLLER_CAPABILITIES";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_SERIAL_API_SET_TIMEOUTS"] = 6] = "FUNC_ID_SERIAL_API_SET_TIMEOUTS";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_SERIAL_API_GET_CAPABILITIES"] = 7] = "FUNC_ID_SERIAL_API_GET_CAPABILITIES";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_SERIAL_API_SOFT_RESET"] = 8] = "FUNC_ID_SERIAL_API_SOFT_RESET";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_GET_PROTOCOL_VERSION"] = 9] = "FUNC_ID_ZW_GET_PROTOCOL_VERSION";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_SERIAL_API_STARTED"] = 10] = "FUNC_ID_SERIAL_API_STARTED";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_SERIAL_API_SETUP"] = 11] = "FUNC_ID_SERIAL_API_SETUP";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_SERIAL_API_APPL_NODE_INFORMATION_CMD_CLASSES"] = 12] = "FUNC_ID_SERIAL_API_APPL_NODE_INFORMATION_CMD_CLASSES";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SEND_DATA_EX"] = 14] = "FUNC_ID_ZW_SEND_DATA_EX";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SEND_DATA_MULTI_EX"] = 15] = "FUNC_ID_ZW_SEND_DATA_MULTI_EX";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SET_RF_RECEIVE_MODE"] = 16] = "FUNC_ID_ZW_SET_RF_RECEIVE_MODE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SET_SLEEP_MODE"] = 17] = "FUNC_ID_ZW_SET_SLEEP_MODE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SEND_NODE_INFORMATION"] = 18] = "FUNC_ID_ZW_SEND_NODE_INFORMATION";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SEND_DATA"] = 19] = "FUNC_ID_ZW_SEND_DATA";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SEND_DATA_MULTI"] = 20] = "FUNC_ID_ZW_SEND_DATA_MULTI";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_GET_VERSION"] = 21] = "FUNC_ID_ZW_GET_VERSION";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SEND_DATA_ABORT"] = 22] = "FUNC_ID_ZW_SEND_DATA_ABORT";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_RF_POWER_LEVEL_SET"] = 23] = "FUNC_ID_ZW_RF_POWER_LEVEL_SET";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SEND_DATA_META"] = 24] = "FUNC_ID_ZW_SEND_DATA_META";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_RESERVED_SD"] = 25] = "FUNC_ID_ZW_RESERVED_SD";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_RESERVED_SDM"] = 26] = "FUNC_ID_ZW_RESERVED_SDM";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_RESERVED_SRI"] = 27] = "FUNC_ID_ZW_RESERVED_SRI";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_GET_RANDOM"] = 28] = "FUNC_ID_ZW_GET_RANDOM";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_RANDOM"] = 29] = "FUNC_ID_ZW_RANDOM";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_RF_POWER_LEVEL_REDISCOVERY_SET"] = 30] = "FUNC_ID_ZW_RF_POWER_LEVEL_REDISCOVERY_SET";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_MEMORY_GET_ID"] = 32] = "FUNC_ID_MEMORY_GET_ID";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_MEMORY_GET_BYTE"] = 33] = "FUNC_ID_MEMORY_GET_BYTE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_MEMORY_PUT_BYTE"] = 34] = "FUNC_ID_MEMORY_PUT_BYTE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_MEMORY_GET_BUFFER"] = 35] = "FUNC_ID_MEMORY_GET_BUFFER";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_MEMORY_PUT_BUFFER"] = 36] = "FUNC_ID_MEMORY_PUT_BUFFER";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_SERIAL_API_GET_APPL_HOST_MEMORY_OFFSET"] = 37] = "FUNC_ID_SERIAL_API_GET_APPL_HOST_MEMORY_OFFSET";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_DEBUG_OUTPUT"] = 38] = "FUNC_ID_DEBUG_OUTPUT";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_AUTO_PROGRAMMING"] = 39] = "FUNC_ID_AUTO_PROGRAMMING";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_NVR_GET_VALUE"] = 40] = "FUNC_ID_NVR_GET_VALUE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_NVM_GET_ID"] = 41] = "FUNC_ID_NVM_GET_ID";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_NVM_EXT_READ_LONG_BUFFER"] = 42] = "FUNC_ID_NVM_EXT_READ_LONG_BUFFER";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_NVM_EXT_WRITE_LONG_BUFFER"] = 43] = "FUNC_ID_NVM_EXT_WRITE_LONG_BUFFER";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_NVM_EXT_READ_LONG_BYTE"] = 44] = "FUNC_ID_NVM_EXT_READ_LONG_BYTE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_NVM_EXT_WRITE_LONG_BYTE"] = 45] = "FUNC_ID_NVM_EXT_WRITE_LONG_BYTE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_NVM_BACKUP_RESTORE"] = 46] = "FUNC_ID_NVM_BACKUP_RESTORE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_NVR_GET_APP_VALUE"] = 47] = "FUNC_ID_ZW_NVR_GET_APP_VALUE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_CLOCK_SET"] = 48] = "FUNC_ID_CLOCK_SET";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_CLOCK_GET"] = 49] = "FUNC_ID_CLOCK_GET";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_CLOCK_CMP"] = 50] = "FUNC_ID_CLOCK_CMP";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_RTC_TIMER_CREATE"] = 51] = "FUNC_ID_RTC_TIMER_CREATE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_RTC_TIMER_READ"] = 52] = "FUNC_ID_RTC_TIMER_READ";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_RTC_TIMER_DELETE"] = 53] = "FUNC_ID_RTC_TIMER_DELETE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_RTC_TIMER_CALL"] = 54] = "FUNC_ID_RTC_TIMER_CALL";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_CLEAR_TX_TIMERS"] = 55] = "FUNC_ID_CLEAR_TX_TIMERS";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_GET_TX_TIMERS"] = 56] = "FUNC_ID_GET_TX_TIMERS";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_CLEAR_NETWORK_STATS"] = 57] = "FUNC_ID_ZW_CLEAR_NETWORK_STATS";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_GET_NETWORK_STATS"] = 58] = "FUNC_ID_ZW_GET_NETWORK_STATS";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_GET_BACKGROUND_RSSI"] = 59] = "FUNC_ID_ZW_GET_BACKGROUND_RSSI";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SET_LISTEN_BEFORE_TALK_THRESHOLD"] = 60] = "FUNC_ID_ZW_SET_LISTEN_BEFORE_TALK_THRESHOLD";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_REMOVE_NODE_ID_FROM_NETWORK"] = 63] = "FUNC_ID_ZW_REMOVE_NODE_ID_FROM_NETWORK";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SET_LEARN_NODE_STATE"] = 64] = "FUNC_ID_ZW_SET_LEARN_NODE_STATE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_GET_NODE_PROTOCOL_INFO"] = 65] = "FUNC_ID_ZW_GET_NODE_PROTOCOL_INFO";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SET_DEFAULT"] = 66] = "FUNC_ID_ZW_SET_DEFAULT";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_NEW_CONTROLLER"] = 67] = "FUNC_ID_ZW_NEW_CONTROLLER";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_REPLICATION_COMMAND_COMPLETE"] = 68] = "FUNC_ID_ZW_REPLICATION_COMMAND_COMPLETE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_REPLICATION_SEND_DATA"] = 69] = "FUNC_ID_ZW_REPLICATION_SEND_DATA";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_ASSIGN_RETURN_ROUTE"] = 70] = "FUNC_ID_ZW_ASSIGN_RETURN_ROUTE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_DELETE_RETURN_ROUTE"] = 71] = "FUNC_ID_ZW_DELETE_RETURN_ROUTE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_REQUEST_NODE_NEIGHBOR_UPDATE"] = 72] = "FUNC_ID_ZW_REQUEST_NODE_NEIGHBOR_UPDATE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_REQUEST_NODETYPE_NEIGHBOR_UPDATE"] = 104] = "FUNC_ID_ZW_REQUEST_NODETYPE_NEIGHBOR_UPDATE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_APPLICATION_UPDATE"] = 73] = "FUNC_ID_ZW_APPLICATION_UPDATE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_ADD_NODE_TO_NETWORK"] = 74] = "FUNC_ID_ZW_ADD_NODE_TO_NETWORK";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_REMOVE_NODE_FROM_NETWORK"] = 75] = "FUNC_ID_ZW_REMOVE_NODE_FROM_NETWORK";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_CREATE_NEW_PRIMARY"] = 76] = "FUNC_ID_ZW_CREATE_NEW_PRIMARY";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_CONTROLLER_CHANGE"] = 77] = "FUNC_ID_ZW_CONTROLLER_CHANGE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_RESERVED_FN"] = 78] = "FUNC_ID_ZW_RESERVED_FN";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_ASSIGN_PRIORITY_RETURN_ROUTE"] = 79] = "FUNC_ID_ZW_ASSIGN_PRIORITY_RETURN_ROUTE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SET_LEARN_MODE"] = 80] = "FUNC_ID_ZW_SET_LEARN_MODE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_ASSIGN_SUC_RETURN_ROUTE"] = 81] = "FUNC_ID_ZW_ASSIGN_SUC_RETURN_ROUTE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_ENABLE_SUC"] = 82] = "FUNC_ID_ZW_ENABLE_SUC";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_REQUEST_NETWORK_UPDATE"] = 83] = "FUNC_ID_ZW_REQUEST_NETWORK_UPDATE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SET_SUC_NODE_ID"] = 84] = "FUNC_ID_ZW_SET_SUC_NODE_ID";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_DELETE_SUC_RETURN_ROUTE"] = 85] = "FUNC_ID_ZW_DELETE_SUC_RETURN_ROUTE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_GET_SUC_NODE_ID"] = 86] = "FUNC_ID_ZW_GET_SUC_NODE_ID";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SEND_SUC_ID"] = 87] = "FUNC_ID_ZW_SEND_SUC_ID";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_ASSIGN_PRIORITY_SUC_RETURN_ROUTE"] = 88] = "FUNC_ID_ZW_ASSIGN_PRIORITY_SUC_RETURN_ROUTE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_REDISCOVERY_NEEDED"] = 89] = "FUNC_ID_ZW_REDISCOVERY_NEEDED";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_REQUEST_NODE_NEIGHBOR_UPDATE_OPTION"] = 90] = "FUNC_ID_ZW_REQUEST_NODE_NEIGHBOR_UPDATE_OPTION";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SUPPORT9600_ONLY"] = 91] = "FUNC_ID_ZW_SUPPORT9600_ONLY";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_REQUEST_NEW_ROUTE_DESTINATIONS"] = 92] = "FUNC_ID_ZW_REQUEST_NEW_ROUTE_DESTINATIONS";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_IS_NODE_WITHIN_DIRECT_RANGE"] = 93] = "FUNC_ID_ZW_IS_NODE_WITHIN_DIRECT_RANGE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_EXPLORE_REQUEST_INCLUSION"] = 94] = "FUNC_ID_ZW_EXPLORE_REQUEST_INCLUSION";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_EXPLORE_REQUEST_EXCLUSION"] = 95] = "FUNC_ID_ZW_EXPLORE_REQUEST_EXCLUSION";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_REQUEST_NODE_INFO"] = 96] = "FUNC_ID_ZW_REQUEST_NODE_INFO";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_REMOVE_FAILED_NODE_ID"] = 97] = "FUNC_ID_ZW_REMOVE_FAILED_NODE_ID";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_IS_FAILED_NODE_ID"] = 98] = "FUNC_ID_ZW_IS_FAILED_NODE_ID";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_REPLACE_FAILED_NODE"] = 99] = "FUNC_ID_ZW_REPLACE_FAILED_NODE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SET_ROUTING_MAX_6_00"] = 101] = "FUNC_ID_ZW_SET_ROUTING_MAX_6_00";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_IS_PRIMARY_CTRL"] = 102] = "FUNC_ID_ZW_IS_PRIMARY_CTRL";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_AES_ECB"] = 103] = "FUNC_ID_ZW_AES_ECB";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_TIMER_START"] = 112] = "FUNC_ID_TIMER_START";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_TIMER_RESTART"] = 113] = "FUNC_ID_TIMER_RESTART";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_TIMER_CANCEL"] = 114] = "FUNC_ID_TIMER_CANCEL";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_TIMER_CALL"] = 115] = "FUNC_ID_TIMER_CALL";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_FIRMWARE_UPDATE_NVM"] = 120] = "FUNC_ID_ZW_FIRMWARE_UPDATE_NVM";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_GET_ROUTING_TABLE_LINE"] = 128] = "FUNC_ID_GET_ROUTING_TABLE_LINE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_GET_TX_COUNTER"] = 129] = "FUNC_ID_GET_TX_COUNTER";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_RESET_TX_COUNTER"] = 130] = "FUNC_ID_RESET_TX_COUNTER";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_STORE_NODEINFO"] = 131] = "FUNC_ID_STORE_NODEINFO";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_STORE_HOMEID"] = 132] = "FUNC_ID_STORE_HOMEID";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_LOCK_ROUTE_RESPONSE"] = 144] = "FUNC_ID_LOCK_ROUTE_RESPONSE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SEND_DATA_ROUTE_DEMO"] = 145] = "FUNC_ID_ZW_SEND_DATA_ROUTE_DEMO";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_GET_PRIORITY_ROUTE"] = 146] = "FUNC_ID_ZW_GET_PRIORITY_ROUTE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SET_PRIORITY_ROUTE"] = 147] = "FUNC_ID_ZW_SET_PRIORITY_ROUTE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_SERIAL_API_TEST"] = 149] = "FUNC_ID_SERIAL_API_TEST";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_SERIAL_API_EXT"] = 152] = "FUNC_ID_SERIAL_API_EXT";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SECURITY_SETUP"] = 156] = "FUNC_ID_ZW_SECURITY_SETUP";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_APPLICATION_SECURITY_EVENT"] = 157] = "FUNC_ID_APPLICATION_SECURITY_EVENT";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_SERIAL_API_APPL_SLAVE_NODE_INFORMATION"] = 160] = "FUNC_ID_SERIAL_API_APPL_SLAVE_NODE_INFORMATION";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_APPLICATION_SLAVE_COMMAND_HANDLER"] = 161] = "FUNC_ID_APPLICATION_SLAVE_COMMAND_HANDLER";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SEND_SLAVE_NODE_INFORMATION"] = 162] = "FUNC_ID_ZW_SEND_SLAVE_NODE_INFORMATION";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SEND_SLAVE_DATA"] = 163] = "FUNC_ID_ZW_SEND_SLAVE_DATA";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SET_SLAVE_LEARN_MODE"] = 164] = "FUNC_ID_ZW_SET_SLAVE_LEARN_MODE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_GET_VIRTUAL_NODES"] = 165] = "FUNC_ID_ZW_GET_VIRTUAL_NODES";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_IS_VIRTUAL_NODE"] = 166] = "FUNC_ID_ZW_IS_VIRTUAL_NODE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_RESERVED_SSD"] = 167] = "FUNC_ID_ZW_RESERVED_SSD";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_APPLICATION_COMMAND_HANDLER_BRIDGE"] = 168] = "FUNC_ID_APPLICATION_COMMAND_HANDLER_BRIDGE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SEND_DATA_BRIDGE"] = 169] = "FUNC_ID_ZW_SEND_DATA_BRIDGE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SEND_DATA_META_BRIDGE"] = 170] = "FUNC_ID_ZW_SEND_DATA_META_BRIDGE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SEND_DATA_MULTI_BRIDGE"] = 171] = "FUNC_ID_ZW_SEND_DATA_MULTI_BRIDGE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_PWR_SETSTOPMODE"] = 176] = "FUNC_ID_PWR_SETSTOPMODE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_PWR_CLK_PD"] = 177] = "FUNC_ID_PWR_CLK_PD";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_PWR_CLK_PUP"] = 178] = "FUNC_ID_PWR_CLK_PUP";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_PWR_SELECT_CLK"] = 179] = "FUNC_ID_PWR_SELECT_CLK";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SET_WUT_TIMEOUT"] = 180] = "FUNC_ID_ZW_SET_WUT_TIMEOUT";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_IS_WUT_KICKED"] = 181] = "FUNC_ID_ZW_IS_WUT_KICKED";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_WATCHDOG_ENABLE"] = 182] = "FUNC_ID_ZW_WATCHDOG_ENABLE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_WATCHDOG_DISABLE"] = 183] = "FUNC_ID_ZW_WATCHDOG_DISABLE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_WATCHDOG_KICK"] = 184] = "FUNC_ID_ZW_WATCHDOG_KICK";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SET_EXT_INT_LEVEL"] = 185] = "FUNC_ID_ZW_SET_EXT_INT_LEVEL";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_RF_POWER_LEVEL_GET"] = 186] = "FUNC_ID_ZW_RF_POWER_LEVEL_GET";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_GET_NEIGHBOR_COUNT"] = 187] = "FUNC_ID_ZW_GET_NEIGHBOR_COUNT";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_ARE_NODES_NEIGHBOURS"] = 188] = "FUNC_ID_ZW_ARE_NODES_NEIGHBOURS";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_TYPE_LIBRARY"] = 189] = "FUNC_ID_ZW_TYPE_LIBRARY";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SEND_TEST_FRAME"] = 190] = "FUNC_ID_ZW_SEND_TEST_FRAME";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_GET_PROTOCOL_STATUS"] = 191] = "FUNC_ID_ZW_GET_PROTOCOL_STATUS";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SET_PROMISCUOUS_MODE"] = 208] = "FUNC_ID_ZW_SET_PROMISCUOUS_MODE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_PROMISCUOUS_APPLICATION_COMMAND_HANDLER"] = 209] = "FUNC_ID_PROMISCUOUS_APPLICATION_COMMAND_HANDLER";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_WATCHDOG_START"] = 210] = "FUNC_ID_ZW_WATCHDOG_START";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_WATCHDOG_STOP"] = 211] = "FUNC_ID_ZW_WATCHDOG_STOP";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SET_ROUTING_MAX"] = 212] = "FUNC_ID_ZW_SET_ROUTING_MAX";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_GET_ROUTING_MAX"] = 213] = "FUNC_ID_ZW_GET_ROUTING_MAX";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_PM_STAY_AWAKE"] = 215] = "FUNC_ID_PM_STAY_AWAKE";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_PM_CANCEL"] = 216] = "FUNC_ID_PM_CANCEL";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_NETWORK_MANAGEMENT_SET_MAX_INCLUSION_REQUEST_INTERVALS"] = 214] = "FUNC_ID_ZW_NETWORK_MANAGEMENT_SET_MAX_INCLUSION_REQUEST_INTERVALS";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_INITIATE_SHUTDOWN"] = 217] = "FUNC_ID_ZW_INITIATE_SHUTDOWN";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_SERIAL_API_GET_LR_NODES"] = 218] = "FUNC_ID_SERIAL_API_GET_LR_NODES";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_GET_LR_CHANNEL"] = 219] = "FUNC_ID_GET_LR_CHANNEL";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_SET_LR_CHANNEL"] = 220] = "FUNC_ID_SET_LR_CHANNEL";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_SET_LR_VIRTUAL_IDS"] = 221] = "FUNC_ID_ZW_SET_LR_VIRTUAL_IDS";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_GET_DCDC_CONFIG"] = 222] = "FUNC_ID_GET_DCDC_CONFIG";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_SET_DCDC_CONFIG"] = 223] = "FUNC_ID_SET_DCDC_CONFIG";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_NUNIT_CMD"] = 224] = "FUNC_ID_ZW_NUNIT_CMD";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_NUNIT_INIT"] = 225] = "FUNC_ID_ZW_NUNIT_INIT";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_NUNIT_LIST"] = 226] = "FUNC_ID_ZW_NUNIT_LIST";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_NUNIT_RUN"] = 227] = "FUNC_ID_ZW_NUNIT_RUN";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ZW_NUNIT_END"] = 228] = "FUNC_ID_ZW_NUNIT_END";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_ENABLE_RADIO_PTI"] = 231] = "FUNC_ID_ENABLE_RADIO_PTI";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_GET_RADIO_PTI"] = 232] = "FUNC_ID_GET_RADIO_PTI";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_SEND_NOP"] = 233] = "FUNC_ID_SEND_NOP";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_SERIAL_API_POWER_MANAGEMENT"] = 238] = "FUNC_ID_SERIAL_API_POWER_MANAGEMENT";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_SERIAL_API_READY"] = 239] = "FUNC_ID_SERIAL_API_READY";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_PROPRIETARY_0"] = 240] = "FUNC_ID_PROPRIETARY_0";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_PROPRIETARY_1"] = 241] = "FUNC_ID_PROPRIETARY_1";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_PROPRIETARY_2"] = 242] = "FUNC_ID_PROPRIETARY_2";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_PROPRIETARY_3"] = 243] = "FUNC_ID_PROPRIETARY_3";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_PROPRIETARY_4"] = 244] = "FUNC_ID_PROPRIETARY_4";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_PROPRIETARY_5"] = 245] = "FUNC_ID_PROPRIETARY_5";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_PROPRIETARY_6"] = 246] = "FUNC_ID_PROPRIETARY_6";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_PROPRIETARY_7"] = 247] = "FUNC_ID_PROPRIETARY_7";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_PROPRIETARY_8"] = 248] = "FUNC_ID_PROPRIETARY_8";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_PROPRIETARY_9"] = 249] = "FUNC_ID_PROPRIETARY_9";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_PROPRIETARY_A"] = 250] = "FUNC_ID_PROPRIETARY_A";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_PROPRIETARY_B"] = 251] = "FUNC_ID_PROPRIETARY_B";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_PROPRIETARY_C"] = 252] = "FUNC_ID_PROPRIETARY_C";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_PROPRIETARY_D"] = 253] = "FUNC_ID_PROPRIETARY_D";\n    SapiClassFuncId[SapiClassFuncId["FUNC_ID_PROPRIETARY_E"] = 254] = "FUNC_ID_PROPRIETARY_E";\n})(SapiClassFuncId || (exports.SapiClassFuncId = SapiClassFuncId = {}));\nclass SapiClass {\n    _readWithTimeout(timeout) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let out;\n            if (this.port == undefined)\n                return (new Uint8Array([]));\n            const reader = this.port.readable.getReader();\n            const timer = setTimeout(() => {\n                reader.releaseLock();\n            }, timeout);\n            try {\n                out = (yield reader.read()).value;\n            }\n            catch (err) {\n                out = new Uint8Array([]);\n            }\n            clearTimeout(timer);\n            reader.releaseLock();\n            return (out);\n        });\n    }\n    _read(num) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let out, i, rep, tempos;\n            rep = 0x0;\n            while (rep < 10) {\n                if (this.queue.length >= num) {\n                    out = [];\n                    i = 0x0;\n                    while (i < num) {\n                        tempos = this.queue.shift();\n                        if (tempos == undefined)\n                            break;\n                        out.push(tempos);\n                        i++;\n                    }\n                    return (out);\n                }\n                const value = yield this._readWithTimeout(100);\n                i = 0x0;\n                while (i < value.byteLength) {\n                    this.queue.push(value[i]);\n                    i++;\n                }\n                rep++;\n            }\n            if (num >= this.queue.length)\n                num = this.queue.length;\n            out = [];\n            i = 0x0;\n            while (i < num) {\n                tempos = this.queue.shift();\n                if (tempos == undefined)\n                    break;\n                out.push(tempos);\n                i++;\n            }\n            return (out);\n        });\n    }\n    _write(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.port == undefined)\n                return (false);\n            const data_uint8 = new Uint8Array(data);\n            const writer = this.port.writable.getWriter();\n            yield writer.write(data_uint8);\n            writer.releaseLock();\n            return (true);\n        });\n    }\n    _clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (;;) {\n                const value = yield this._readWithTimeout(100);\n                if (value.length == 0x0)\n                    return;\n            }\n        });\n    }\n    _sendData(cmd, databuff) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let final_data;\n            const data_len = databuff.length + this.ADDITIONAL_SIZE;\n            if (data_len > 255) {\n                const crc_data = [0x00, this.REQUEST, cmd].concat(databuff);\n                final_data = [0x00, (data_len >> 8) & 0x0FF, data_len & 0x0FF, this.REQUEST, cmd].concat(databuff);\n                const crc16 = (0, utilities_1.calcSigmaCRC16)(0x1D0F, crc_data, 0, crc_data.length);\n                final_data = [this.SOF].concat(final_data).concat([(crc16 >> 8) & 0xFF, (crc16) & 0xFF]);\n                if ((yield this._write(final_data)) == false)\n                    return (false);\n                return (true);\n            }\n            final_data = [data_len & 0x0FF, this.REQUEST, cmd].concat(databuff);\n            const crc = (0, utilities_1.checksum)(final_data);\n            final_data = [this.SOF].concat(final_data).concat([crc]);\n            if ((yield this._write(final_data)) == false)\n                return (false);\n            return (true);\n        });\n    }\n    _sendNack() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield (this._write([this.NAK])));\n        });\n    }\n    _sendAck() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield (this._write([this.ACK])));\n        });\n    }\n    _waitSOF(timeout) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const sof_timeout = Date.now() + timeout;\n            while (sof_timeout > Date.now()) {\n                const sof = yield this._read(0x1);\n                if (sof.length == 0x0) {\n                    yield (0, utilities_1.sleep)(100);\n                    continue;\n                }\n                if (sof[0x0] == this.SOF)\n                    return (true);\n                yield (0, utilities_1.sleep)(200);\n            }\n            return (false);\n        });\n    }\n    _send_cmd(cmd, databuff, retries) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let rbuff;\n            const out = { status: SapiClassStatus.OK, crc: 0x0, cmd: 0x0, raw: [], data: [] };\n            if (this.b_open == false) {\n                out.status = SapiClassStatus.PORT_NOT_OPEN;\n                return (out);\n            }\n            yield this._clear();\n            for (;;) {\n                if ((yield this._sendData(cmd, databuff)) == false) {\n                    out.status = SapiClassStatus.WRITE;\n                    return (out);\n                }\n                rbuff = yield this._read(0x1);\n                if (rbuff.length == 0x0) {\n                    out.status = SapiClassStatus.NO_ACK;\n                    return (out);\n                }\n                if (rbuff[0] == this.ACK)\n                    break;\n                if (rbuff[0] == this.CAN) {\n                    yield this._recvIncomingRequest(2000);\n                    retries -= 1;\n                    if (retries > 0)\n                        continue;\n                }\n                if (rbuff[0] == this.NAK) {\n                    retries -= 1;\n                    if (retries > 0)\n                        continue;\n                }\n                out.status = SapiClassStatus.NO_ACK;\n                return (out);\n            }\n            const result = yield this._recvIncomingRequest(2000);\n            return (result);\n        });\n    }\n    _request() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let port;\n            if (this.port != undefined)\n                return (false);\n            try {\n                port = yield navigator.serial.requestPort();\n            }\n            catch (e) {\n                return (false);\n            }\n            this.port = port;\n            return (true);\n        });\n    }\n    _open(baudRate) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.port == undefined)\n                return (false);\n            if (this.b_open == true)\n                return (false);\n            try {\n                yield this.port.open({ baudRate, bufferSize: 8192 });\n            }\n            catch (e) {\n                return (false);\n            }\n            this.b_open = true;\n            return (true);\n        });\n    }\n    _close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.port == undefined)\n                return (false);\n            if (this.b_open == false)\n                return (false);\n            yield this.port.close();\n            this.b_open = false;\n            return (true);\n        });\n    }\n    _recvIncomingRequest(timeout) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let buff_data;\n            const out = { status: SapiClassStatus.OK, crc: 0x0, cmd: 0x0, raw: [], data: [] };\n            if (this.b_open == false) {\n                out.status = SapiClassStatus.PORT_NOT_OPEN;\n                return (out);\n            }\n            if ((yield this._waitSOF(timeout)) == false) {\n                out.status = SapiClassStatus.NO_SOF;\n                return (out);\n            }\n            buff_data = yield this._read(0x1);\n            if (buff_data.length == 0x0) {\n                out.status = SapiClassStatus.NO_LENGHT;\n                return (out);\n            }\n            const len_data = buff_data[0x0];\n            buff_data = yield this._read(len_data);\n            if (buff_data.length != len_data) {\n                yield this._sendNack();\n                out.status = SapiClassStatus.INVALID_DATA_LEN;\n                return (out);\n            }\n            if (len_data < 0x3) {\n                out.status = SapiClassStatus.WRONG_LENGHT;\n                return (out);\n            }\n            out.crc = (0, utilities_1.checksum)([len_data].concat(buff_data.slice(0, len_data - 0x1)));\n            if (out.crc != buff_data[len_data - 1]) {\n                yield this._sendNack();\n                out.status = SapiClassStatus.INVALID_CRC;\n                return (out);\n            }\n            yield this._sendAck();\n            out.raw = [this.SOF, len_data].concat(buff_data);\n            out.cmd = out.raw[0x3];\n            out.data = out.raw.slice(0x4, out.raw.length - 0x1);\n            return (out);\n        });\n    }\n    _sendCommandUnSz(cmd, args, retries) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this._send_cmd(cmd, args, retries);\n            if (res.status != SapiClassStatus.OK)\n                return (res);\n            if (cmd == SapiClassFuncId.FUNC_ID_SERIAL_API_SOFT_RESET)\n                cmd = SapiClassFuncId.FUNC_ID_SERIAL_API_STARTED;\n            if (res.cmd != cmd) {\n                res.status = SapiClassStatus.WRONG_CMD;\n                return (res);\n            }\n            return (res);\n        });\n    }\n    recvIncomingRequest(timeout) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const out = { status: SapiClassStatus.OK, crc: 0x0, cmd: 0x0, raw: [], data: [] };\n            if (this.b_busy == true) {\n                out.status = SapiClassStatus.PORT_BUSY;\n                return (out);\n            }\n            this.b_busy = true;\n            const res = yield this._recvIncomingRequest(timeout);\n            this.b_busy = false;\n            return (res);\n        });\n    }\n    sendCommandUnSz(cmd_1, args_1) {\n        return __awaiter(this, arguments, void 0, function* (cmd, args, retries = 0x3) {\n            const out = { status: SapiClassStatus.OK, crc: 0x0, cmd: 0x0, raw: [], data: [] };\n            if (this.b_busy == true) {\n                out.status = SapiClassStatus.PORT_BUSY;\n                return (out);\n            }\n            this.b_busy = true;\n            const res = yield this._sendCommandUnSz(cmd, args, retries);\n            this.b_busy = false;\n            return (res);\n        });\n    }\n    busy() {\n        return (this.b_busy);\n    }\n    supported() {\n        if (!navigator.serial || !navigator.serial.requestPort)\n            return (false);\n        return (true);\n    }\n    request() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.b_busy == true)\n                return (false);\n            this.b_busy = true;\n            const out = yield this._request();\n            this.b_busy = false;\n            return (out);\n        });\n    }\n    open(baudRate) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.b_busy == true)\n                return (false);\n            this.b_busy = true;\n            const out = yield this._open(baudRate);\n            this.b_busy = false;\n            return (out);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.b_busy == true)\n                return (false);\n            this.b_busy = true;\n            const out = yield this._close();\n            this.b_busy = false;\n            return (out);\n        });\n    }\n    constructor() {\n        this.SOF = 0x01;\n        this.ACK = 0x06;\n        this.NAK = 0x15;\n        this.CAN = 0x18;\n        this.REQUEST = 0x00;\n        this.RESPONSE = 0x01;\n        this.ADDITIONAL_SIZE = 0x03;\n        this.b_busy = false;\n        this.b_open = false;\n        this.port = undefined;\n        this.queue = [];\n    }\n}\nexports.SapiClass = SapiClass;\n\n\n//# sourceURL=webpack://ControllerUiLib/./src/sapi.ts?')},864:(__unused_webpack_module,exports)=>{"use strict";eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.hexToBytes = exports.costruct_int = exports.calcSigmaCRC16 = exports.checksum = exports.sleep = void 0;\nfunction hexToBytes(hex) {\n    let i;\n    if (hex.length == 0x0)\n        return (undefined);\n    if ((hex.length & 0x1) != 0x0)\n        return (undefined);\n    const bytes = [];\n    i = 0x0;\n    while (i < hex.length) {\n        try {\n            bytes.push(parseInt(hex.substring(i, i + 0x2), 0x10));\n        }\n        catch (error) {\n            return (undefined);\n        }\n        i = i + 0x2;\n    }\n    return (bytes);\n}\nexports.hexToBytes = hexToBytes;\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nexports.sleep = sleep;\nfunction checksum(data) {\n    let ret = 0xff;\n    let i = 0x0;\n    while (i < data.length) {\n        ret = ret ^ data[i];\n        i++;\n    }\n    return (ret);\n}\nexports.checksum = checksum;\nfunction calcSigmaCRC16(crc, data, offset, llen) {\n    let new_bit, wrk_data, b, a, bit_mask;\n    const bin_data = data;\n    const CRC_POLY = 0x1021;\n    while (llen != 0) {\n        llen -= 1;\n        if (offset >= bin_data.length)\n            wrk_data = 0xFF;\n        else\n            wrk_data = bin_data[offset];\n        offset += 1;\n        bit_mask = 0x80;\n        while (bit_mask != 0) {\n            a = 0;\n            b = 0;\n            if ((wrk_data & bit_mask) != 0)\n                a = 1;\n            if ((crc & 0x8000) != 0)\n                b = 1;\n            new_bit = a ^ b;\n            crc <<= 1;\n            crc = crc & 0xffff;\n            if (new_bit == 1) {\n                crc ^= CRC_POLY;\n            }\n            bit_mask >>= 1;\n        }\n    }\n    return (crc);\n}\nexports.calcSigmaCRC16 = calcSigmaCRC16;\nfunction costruct_int(arr, n, inv = true) {\n    let val, i, indx;\n    val = 0;\n    i = 0x0;\n    while (i < arr.length) {\n        val <<= 8;\n        indx = i;\n        if (inv == true)\n            indx = n - 1 - i;\n        if ((indx < arr.length) && (indx >= 0))\n            val += arr[indx];\n        i++;\n    }\n    return (val);\n}\nexports.costruct_int = costruct_int;\n\n\n//# sourceURL=webpack://ControllerUiLib/./src/utilities.ts?')},128:(__unused_webpack_module,exports)=>{"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.controller_vendor_ids = void 0;\nconst controller_vendor_ids = {\n    0x0000: {\n        Name: 'Silicon Labs',\n        Webpage: 'http://www.silabs.com',\n    },\n    0x0001: {\n        Name: 'Advaned Control Solutions',\n        Webpage: 'http://www.act-solutions.com',\n    },\n    0x0002: {\n        Name: 'Danfoss',\n        Webpage: 'http://www.danfoss.com',\n    },\n    0x0004: {\n        Name: 'Exhausto',\n        Webpage: 'http://www.exhausto.com',\n    },\n    0x0012: {\n        Name: 'Tell It Online',\n    },\n    0x001e: {\n        Name: 'Express Controls',\n        Webpage: 'http://www.expresscontrols.com',\n    },\n    0x0020: {\n        Name: 'Universal Electronics',\n        Webpage: 'http://www.uie.com',\n    },\n    0x0033: {\n        Name: 'Hunter Douglas',\n        Webpage: 'http://www.hdl.com',\n    },\n    0x0039: {\n        Name: 'Honeywell',\n    },\n    0x0059: {\n        Name: 'Hostmann Controls',\n        Webpage: 'http://www.horstmann.co.uk',\n    },\n    0x0060: {\n        Name: 'Everspring',\n        Webpage: 'http://www.everspring.com',\n    },\n    0x0064: {\n        Name: 'Duwi',\n        Webpage: 'http://www.duewi.de',\n    },\n    0x0066: {\n        Name: 'TrickleStar',\n        Webpage: 'http://www.tricklestar.com',\n    },\n    0x006b: {\n        Name: 'Tricklestar (former Empower Controls Ltd.)',\n        Webpage: 'http://www.tricklestar.com',\n    },\n    0x0071: {\n        Name: 'LS Control',\n    },\n    0x0077: {\n        Name: 'Innovus',\n    },\n    0x007a: {\n        Name: 'Merten',\n        Webpage: 'http://www.merten.de',\n    },\n    0x0080: {\n        Name: 'Vero Duco',\n    },\n    0x0085: {\n        Name: 'Fakro',\n        Webpage: 'http://www.fakro.com',\n    },\n    0x0086: {\n        Name: 'Aeotec',\n        Webpage: 'http://www.aeotec.com',\n    },\n    0x008a: {\n        Name: 'BeNeXt',\n        Webpage: 'http://benext.nl',\n    },\n    0x0095: {\n        Name: 'QEES',\n        Webpage: 'http://www.qees.eu',\n    },\n    0x008e: {\n        Name: 'Raritan',\n        Webpage: 'http://www.raritan.com',\n    },\n    0x0092: {\n        Name: 'Martin Rentz',\n        Webpage: 'http://www.rentz-gmbh.de',\n    },\n    0x001d: {\n        Name: 'Leviton',\n        Webpage: 'http://www.leviton.com',\n    },\n    0x001a: {\n        Name: 'Cooper Wiring Devices',\n        Webpage: 'http://www.cooper.com',\n    },\n    0x0113: {\n        Name: 'Evolve',\n    },\n    0x0098: {\n        Name: 'RTCA',\n    },\n    0x0125: {\n        Name: 'Motion Inc',\n        Webpage: 'http://www.cooper.com',\n    },\n    0x0109: {\n        Name: 'Vision Security',\n        Webpage: 'http://www.visionsecurity.com.tw',\n    },\n    0x0116: {\n        Name: 'Chromatic Technologies',\n        Webpage: 'http://www.visionsecurity.com.tw',\n    },\n    0x0162: {\n        Name: 'Remotec',\n        Webpage: 'http://www.remotec.com.hk',\n    },\n    0x5254: {\n        Name: 'Remotec',\n        Webpage: 'http://www.remotec.com.hk',\n    },\n    0x0115: {\n        Name: 'Z-Wave.Me',\n        Webpage: 'http://www.z-wave.me',\n    },\n    0x010f: {\n        Name: 'Fibar Group (Nice)',\n        Webpage: 'http://www.fibaro.com',\n    },\n    0x0081: {\n        Name: 'Siegenia-Aubi',\n        Webpage: 'http://www.siegenia-aubi.com',\n    },\n    0x0084: {\n        Name: 'FortrezZ',\n        Webpage: 'http://www.fortrezz.com',\n    },\n    0x0097: {\n        Name: 'Wintop',\n        Webpage: 'http://www.wintop.com',\n    },\n    0x0129: {\n        Name: 'Yale',\n        Webpage: 'http://www.yalelocks.com',\n    },\n    0x0137: {\n        Name: 'FollowGood',\n        Webpage: 'http://www.follow-good.com',\n    },\n    0x0142: {\n        Name: 'Rademacher',\n        Webpage: 'http://rademacher.de',\n    },\n    0x0147: {\n        Name: 'RaZberry by Z-Wave.Me',\n        Webpage: 'http://razpberry.z-wave.me',\n    },\n    0x0148: {\n        Name: 'Eurotronic Technology',\n        Webpage: 'http://www.eurotronic.org',\n    },\n    0x008c: {\n        Name: 'Mi Casa Verde (Vera Control)',\n        Webpage: 'http://www.micasaverde.com',\n    },\n    0x0175: {\n        Name: 'Devolo',\n        Webpage: 'http://www.devolo.com',\n    },\n    0x0154: {\n        Name: 'Popp',\n        Webpage: 'http://www.popp.eu',\n    },\n    0x0270: {\n        Name: 'Ubitech',\n        Webpage: 'http://ubitech.hk',\n    },\n    0xFFFF: {\n        Name: '_Not defined',\n    },\n    0x0028: {\n        Name: '2B Electronics',\n    },\n    0x009B: {\n        Name: '2gig Technologies Inc.',\n    },\n    0x002A: {\n        Name: '3e Technologies',\n    },\n    0x0022: {\n        Name: 'A-1 Components',\n    },\n    0x0117: {\n        Name: 'Abilia',\n    },\n    0x0297: {\n        Name: 'AdMobilize, LLC',\n    },\n    0x0101: {\n        Name: 'ADOX, Inc.',\n    },\n    0x016C: {\n        Name: 'Advanced Optronic Devices Co.,Ltd',\n    },\n    0x009E: {\n        Name: 'Adventure Interactive',\n    },\n    0x0088: {\n        Name: 'Airvent SAM S.p.A.',\n    },\n    0x0094: {\n        Name: 'Alarm.com',\n    },\n    0x0126: {\n        Name: 'Alertme',\n    },\n    0x003B: {\n        Name: 'Allegion',\n    },\n    0x028E: {\n        Name: 'Alphanetworks',\n    },\n    0x0230: {\n        Name: 'Alphonsus Tech',\n    },\n    0x029F: {\n        Name: 'AMADAS Co., LTD ',\n    },\n    0x019C: {\n        Name: 'Amdocs',\n    },\n    0x005A: {\n        Name: 'American Grid, Inc.',\n    },\n    0x032B: {\n        Name: 'Anchor Tech ',\n    },\n    0x026D: {\n        Name: 'Antik Technology Ltd.',\n    },\n    0x0078: {\n        Name: 'anyCOMM Corporation',\n    },\n    0x0144: {\n        Name: 'Applied Micro Electronics \"AME\" BV',\n    },\n    0x0291: {\n        Name: 'Arkea',\n    },\n    0x0029: {\n        Name: 'Asia Heading',\n    },\n    0x0231: {\n        Name: 'ASITEQ',\n    },\n    0x028A: {\n        Name: 'Askey Computer Corp.',\n    },\n    0x013B: {\n        Name: 'AstraLink',\n    },\n    0x0134: {\n        Name: 'AT&amp;T',\n    },\n    0x002B: {\n        Name: 'Atech',\n    },\n    0x0244: {\n        Name: 'Athom BV',\n    },\n    0x032A: {\n        Name: 'AUCEAN TECHNOLOGY. INC',\n    },\n    0x0155: {\n        Name: 'Avadesign Technology Co., Ltd.',\n    },\n    0x0146: {\n        Name: 'Axesstel Inc',\n    },\n    0x0018: {\n        Name: 'Balboa Instruments',\n    },\n    0x0236: {\n        Name: 'Bandi Comm Tech Inc.',\n    },\n    0x0204: {\n        Name: 'Beijing Sino-American Boyi Software Development Co., Ltd',\n    },\n    0x0251: {\n        Name: 'Beijing Universal Energy Huaxia Technology Co.,Ltd',\n    },\n    0x0196: {\n        Name: 'Bellatrix Systems, Inc.',\n    },\n    0x032D: {\n        Name: 'Benetek',\n    },\n    0x002C: {\n        Name: 'BeSafer',\n    },\n    0x014B: {\n        Name: 'BFT S.p.A.',\n    },\n    0x0052: {\n        Name: 'Bit7 Inc.',\n    },\n    0x0311: {\n        Name: 'Blaze Automation',\n    },\n    0x0213: {\n        Name: 'BMS Evler LTD',\n    },\n    0x0023: {\n        Name: 'Boca Devices',\n    },\n    0x015C: {\n        Name: 'Bosch Security Systems, Inc',\n    },\n    0x0138: {\n        Name: 'BRK Brands, Inc.',\n    },\n    0x002D: {\n        Name: 'Broadband Energy Networks Inc.',\n    },\n    0x024A: {\n        Name: 'BTSTAR(HK) TECHNOLOGY COMPANY LIMITED',\n    },\n    0x0145: {\n        Name: 'Buffalo Inc.',\n    },\n    0x0190: {\n        Name: 'Building 36 Technologies',\n    },\n    0x0026: {\n        Name: 'BuLogics',\n    },\n    0x0169: {\n        Name: 'Bönig und Kallenbach oHG',\n    },\n    0x009C: {\n        Name: 'Cameo Communications Inc.',\n    },\n    0x002E: {\n        Name: 'Carrier',\n    },\n    0x000B: {\n        Name: 'CasaWorks',\n    },\n    0x0243: {\n        Name: 'casenio AG',\n    },\n    0x0166: {\n        Name: 'CBCC Domotique SAS',\n    },\n    0x0246: {\n        Name: 'CentraLite Systems, Inc',\n    },\n    0x014E: {\n        Name: 'Check-It Solutions Inc.',\n    },\n    0x0320: {\n        Name: 'China Security &amp; Fire IOT Sensing CO., LTD ',\n    },\n    0x0280: {\n        Name: 'Chuango Security Technology Corporation',\n    },\n    0x0082: {\n        Name: 'Cisco Consumer Business Group',\n    },\n    0x018E: {\n        Name: 'Climax Technology, Ltd.',\n    },\n    0x0200: {\n        Name: 'Cloud Media',\n    },\n    0x002F: {\n        Name: 'Color Kinetics Incorporated',\n    },\n    0x0329: {\n        Name: 'COMAP',\n    },\n    0x0309: {\n        Name: 'Comfortability',\n    },\n    0x0140: {\n        Name: 'Computime',\n    },\n    0x011B: {\n        Name: 'Connected Object',\n    },\n    0x0179: {\n        Name: 'ConnectHome',\n    },\n    0x0285: {\n        Name: 'CONNECTION TECHNOLOGY SYSTEMS ',\n    },\n    0x025D: {\n        Name: 'Contec intelligent housing ',\n    },\n    0x023F: {\n        Name: 'Control4 Corporation',\n    },\n    0x0019: {\n        Name: 'ControlThink LC',\n    },\n    0x000F: {\n        Name: 'ConvergeX Ltd.',\n    },\n    0x007D: {\n        Name: 'CoolGuard',\n    },\n    0x0079: {\n        Name: 'Cooper Lighting',\n    },\n    0x009D: {\n        Name: 'Coventive Technologies Inc.',\n    },\n    0x0328: {\n        Name: 'Cvnet',\n    },\n    0x0014: {\n        Name: 'Cyberhouse',\n    },\n    0x0067: {\n        Name: 'CyberTAN Technology, Inc.',\n    },\n    0x0030: {\n        Name: 'Cytech Technology Pre Ltd.',\n    },\n    0x0294: {\n        Name: 'D-3 Technology Co. Ltd',\n    },\n    0x018C: {\n        Name: 'Dawon DNS',\n    },\n    0x020A: {\n        Name: 'Decoris Intelligent System Limited',\n    },\n    0x013F: {\n        Name: 'Defacontrols BV',\n    },\n    0x032E: {\n        Name: 'DEFARO',\n    },\n    0x0031: {\n        Name: 'Destiny Networks',\n    },\n    0x0103: {\n        Name: 'Diehl AKO',\n    },\n    0x0032: {\n        Name: 'Digital 5, Inc.',\n    },\n    0x0228: {\n        Name: 'DigitalZone',\n    },\n    0x0108: {\n        Name: 'D-Link',\n    },\n    0x0127: {\n        Name: 'DMP (Digital Monitoring Products)',\n    },\n    0x0177: {\n        Name: 'Domino sistemi d.o.o.',\n    },\n    0x020E: {\n        Name: 'Domitech Products, LLC',\n    },\n    0x020C: {\n        Name: 'Dongguan Zhou Da Electronics Co.,Ltd',\n    },\n    0x017D: {\n        Name: 'DRACOR Inc.',\n    },\n    0x0184: {\n        Name: 'Dragon Tech Industrial, Ltd.',\n    },\n    0x0223: {\n        Name: 'DTV Research Unipessoal, Lda',\n    },\n    0x0272: {\n        Name: 'Dune-HD',\n    },\n    0x031B: {\n        Name: 'DVACO GROUP',\n    },\n    0x0132: {\n        Name: 'DynaQuip Controls',\n    },\n    0x0247: {\n        Name: 'EASY SAVER Co., Inc',\n    },\n    0x017C: {\n        Name: 'EbV',\n    },\n    0x016B: {\n        Name: 'Echostar',\n    },\n    0x028F: {\n        Name: 'Eco Automation',\n    },\n    0x014A: {\n        Name: 'Ecolink',\n    },\n    0x0157: {\n        Name: 'EcoNet Controls',\n    },\n    0x031F: {\n        Name: 'Eelectron SpA',\n    },\n    0x010D: {\n        Name: 'e-Home AUTOMATION',\n    },\n    0x026B: {\n        Name: 'Ei Electronics ',\n    },\n    0x0087: {\n        Name: 'Eka Systems',\n    },\n    0x021F: {\n        Name: 'Elexa Consumer Products Inc.',\n    },\n    0x0034: {\n        Name: 'El-Gev Electronics LTD',\n    },\n    0x001B: {\n        Name: 'ELK Products, Inc.',\n    },\n    0x020B: {\n        Name: 'Embedded System Design Limited',\n    },\n    0x0035: {\n        Name: 'Embedit A/S',\n    },\n    0x0284: {\n        Name: 'Empers Tech Co., Ltd.',\n    },\n    0x014D: {\n        Name: 'Enblink Co. Ltd',\n    },\n    0x0219: {\n        Name: 'Enwox Technologies s.r.o.',\n    },\n    0x006F: {\n        Name: 'Erone',\n    },\n    0x0160: {\n        Name: 'Essence Security',\n    },\n    0x029B: {\n        Name: 'ESSENTIAL TECHNOLOGIES INC.',\n    },\n    0x0036: {\n        Name: 'Exceptional Innovations',\n    },\n    0x009F: {\n        Name: 'Exigent Sensors',\n    },\n    0x0233: {\n        Name: 'eZEX Corporation',\n    },\n    0x016A: {\n        Name: 'Fantem',\n    },\n    0x0295: {\n        Name: 'fifthplay nv',\n    },\n    0x018D: {\n        Name: 'Flextronics',\n    },\n    0x0024: {\n        Name: 'Flue Sentinel',\n    },\n    0x0037: {\n        Name: 'Foard Systems',\n    },\n    0x018F: {\n        Name: 'Focal Point Limited',\n    },\n    0x0207: {\n        Name: 'Forest Group Nederland B.V',\n    },\n    0x011D: {\n        Name: 'Foxconn',\n    },\n    0x0110: {\n        Name: 'Frostdale',\n    },\n    0x0305: {\n        Name: 'Future Home AS',\n    },\n    0x025A: {\n        Name: 'GES',\n    },\n    0x022B: {\n        Name: 'GKB Security Corporation',\n    },\n    0x018A: {\n        Name: 'Globalchina-Tech',\n    },\n    0x0159: {\n        Name: 'Goap',\n    },\n    0x0076: {\n        Name: 'Goggin Research',\n    },\n    0x0068: {\n        Name: 'Good Way Technology Co., Ltd',\n    },\n    0x0099: {\n        Name: 'GreenWave Reality Inc.',\n    },\n    0x018B: {\n        Name: 'Grib',\n    },\n    0x016D: {\n        Name: 'Guangzhou Ruixiang M&amp;E Co., Ltd',\n    },\n    0x0158: {\n        Name: 'GuangZhou Zeewave Information Technology Co., Ltd.',\n    },\n    0x0287: {\n        Name: 'HAB Home Intelligence, LLC',\n    },\n    0x030D: {\n        Name: 'Hampoo',\n    },\n    0x0208: {\n        Name: 'HANK Electronics Ltd',\n    },\n    0x024C: {\n        Name: 'Hankook Gas Kiki CO.,LTD. ',\n    },\n    0x025C: {\n        Name: 'Hauppauge',\n    },\n    0x0073: {\n        Name: 'Hawking Technologies Inc.',\n    },\n    0x020F: {\n        Name: 'Herald Datanetics Limited',\n    },\n    0x0017: {\n        Name: 'HiTech Automation',\n    },\n    0x0181: {\n        Name: 'Holion Electronic Engineering Co., Ltd',\n    },\n    0x013E: {\n        Name: 'Holtec Electronics BV',\n    },\n    0x000D: {\n        Name: 'Home Automated Living',\n    },\n    0x009A: {\n        Name: 'Home Automation Europe',\n    },\n    0x005B: {\n        Name: 'Home Automation Inc.',\n    },\n    0x0293: {\n        Name: 'Home controls',\n    },\n    0x0038: {\n        Name: 'Home Director',\n    },\n    0x0070: {\n        Name: 'Homemanageables, Inc.',\n    },\n    0x0050: {\n        Name: 'Homepro',\n    },\n    0x000C: {\n        Name: 'HomeSeer Technologies',\n    },\n    0x0275: {\n        Name: 'Honest Technology',\n    },\n    0x023D: {\n        Name: 'Honest Technology Co., Ltd.',\n    },\n    0x0313: {\n        Name: 'Hoppe',\n    },\n    0x0298: {\n        Name: 'Horus Smart Control',\n    },\n    0x0221: {\n        Name: 'HOSEOTELNET',\n    },\n    0x0180: {\n        Name: 'Huapin Information Technology Co.,Ltd',\n    },\n    0x025F: {\n        Name: 'Huawei Device Co., Ltd. ',\n    },\n    0x024B: {\n        Name: 'Huawei Technologies Co., Ltd.',\n    },\n    0x007C: {\n        Name: 'Hunter Douglas',\n    },\n    0x0218: {\n        Name: 'iAutomade Pte Ltd',\n    },\n    0x0011: {\n        Name: 'iCOM Technology b.v.',\n    },\n    0x0106: {\n        Name: 'iControl Networks',\n    },\n    0x0165: {\n        Name: 'ID-RF',\n    },\n    0x019E: {\n        Name: 'iEXERGY GmbH',\n    },\n    0x031C: {\n        Name: 'Ilevia srl',\n    },\n    0x0056: {\n        Name: 'Impact Technologies and Products',\n    },\n    0x0061: {\n        Name: 'Impact Technologies BV',\n    },\n    0x012B: {\n        Name: 'Infusion Development',\n    },\n    0x006C: {\n        Name: 'Ingersoll Rand (Schlage)',\n    },\n    0x011F: {\n        Name: 'Ingersoll Rand (was Ecolink)',\n    },\n    0x0256: {\n        Name: 'Inkel Corp.',\n    },\n    0x003A: {\n        Name: 'Inlon Srl',\n    },\n    0x0141: {\n        Name: 'Innoband Technologies, Inc',\n    },\n    0x031E: {\n        Name: 'Inovelli',\n    },\n    0x0100: {\n        Name: 'Insignia',\n    },\n    0x0006: {\n        Name: 'Intel',\n    },\n    0x001C: {\n        Name: 'IntelliCon',\n    },\n    0x0072: {\n        Name: 'Interactive Electronics Systems (IES)',\n    },\n    0x0005: {\n        Name: 'Intermatic',\n    },\n    0x0013: {\n        Name: 'Internet Dom',\n    },\n    0x0288: {\n        Name: 'INTERSOFT',\n    },\n    0x0278: {\n        Name: 'Inventec',\n    },\n    0x005F: {\n        Name: 'IQ-Group',\n    },\n    0x0212: {\n        Name: 'iRevo',\n    },\n    0x0253: {\n        Name: 'iungo.nl B.V.',\n    },\n    0x0123: {\n        Name: 'IWATSU',\n    },\n    0x0063: {\n        Name: 'Jasco Products',\n    },\n    0x015A: {\n        Name: 'Jin Tao Bao',\n    },\n    0x0164: {\n        Name: 'JSW Pacific Corporation',\n    },\n    0x0214: {\n        Name: 'Kaipule Technology Co., Ltd.',\n    },\n    0x0091: {\n        Name: 'Kamstrup A/S',\n    },\n    0x006A: {\n        Name: 'Kellendonk Elektronik',\n    },\n    0x0114: {\n        Name: 'Kichler',\n    },\n    0x0139: {\n        Name: 'KlickH Pvt Ltd.',\n    },\n    0x0261: {\n        Name: 'KOOL KONCEPTS',\n    },\n    0x0174: {\n        Name: 'Kopera Development Inc.',\n    },\n    0x023A: {\n        Name: 'KUMHO ELECTRIC, INC',\n    },\n    0x0051: {\n        Name: 'Lagotek Corporation',\n    },\n    0x0173: {\n        Name: 'Leak Intelligence, LLC',\n    },\n    0x0300: {\n        Name: 'LEEDARSON LIGHTING CO., LTD.',\n    },\n    0x0187: {\n        Name: 'LEVION Technologies GmbH',\n    },\n    0x0015: {\n        Name: 'Lexel',\n    },\n    0x015B: {\n        Name: 'LG Electronics',\n    },\n    0x0224: {\n        Name: 'LifeShield, LLC',\n    },\n    0x003C: {\n        Name: 'Lifestyle Networks',\n    },\n    0x0210: {\n        Name: 'Light Engine Limited',\n    },\n    0x0316: {\n        Name: 'Lite Automation',\n    },\n    0x017A: {\n        Name: 'Liveguard Ltd.',\n    },\n    0x013A: {\n        Name: 'Living Style Enterprises, Ltd.',\n    },\n    0x015E: {\n        Name: 'Locstar Technology Co., Ltd',\n    },\n    0x007F: {\n        Name: 'Logitech',\n    },\n    0x0025: {\n        Name: 'Loudwater Technologies, LLC',\n    },\n    0x025E: {\n        Name: 'LUXEASY technology company LTD.',\n    },\n    0x0062: {\n        Name: 'LVI Produkter AB',\n    },\n    0x0192: {\n        Name: 'm2m Solution',\n    },\n    0x0195: {\n        Name: 'M2M Solution',\n    },\n    0x006E: {\n        Name: 'Manodo / KTC',\n    },\n    0x003D: {\n        Name: 'Marmitek BV',\n    },\n    0x003E: {\n        Name: 'Martec Access Products',\n    },\n    0x008F: {\n        Name: 'MB Turn Key Design',\n    },\n    0x015F: {\n        Name: 'McoHome Technology Co., Ltd',\n    },\n    0x0222: {\n        Name: 'MCT CO., LTD',\n    },\n    0x0027: {\n        Name: 'Meedio, LLC',\n    },\n    0x0107: {\n        Name: 'MegaChips',\n    },\n    0x022D: {\n        Name: 'Mercury Corporation',\n    },\n    0x0238: {\n        Name: 'Milanity, Inc.',\n    },\n    0x0112: {\n        Name: 'MITSUMI',\n    },\n    0x019D: {\n        Name: 'MOBILUS MOTOR Spółka z o.o. ',\n    },\n    0x0232: {\n        Name: 'MODACOM CO., LTD.',\n    },\n    0x008D: {\n        Name: 'Modstrøm',\n    },\n    0x000E: {\n        Name: 'Mohito Networks',\n    },\n    0x0202: {\n        Name: 'Monoprice',\n    },\n    0x007E: {\n        Name: 'Monster Cable',\n    },\n    0x003F: {\n        Name: 'Motorola',\n    },\n    0x0122: {\n        Name: 'MSK - Miyakawa Seisakusho',\n    },\n    0x0083: {\n        Name: 'MTC Maintronic Germany',\n    },\n    0x0143: {\n        Name: 'myStrom',\n    },\n    0x016E: {\n        Name: 'Nanjing Easthouse Electrical Co., Ltd.',\n    },\n    0x0121: {\n        Name: 'Napco Security Technologies, Inc.',\n    },\n    0x006D: {\n        Name: 'Nefit',\n    },\n    0x0189: {\n        Name: 'Ness Corporation Pty Ltd',\n    },\n    0x0133: {\n        Name: 'Netgear',\n    },\n    0x0248: {\n        Name: 'neusta next GmbH &amp; Co. KG',\n    },\n    0x0203: {\n        Name: 'Newland Communication Science Technology Co., Ltd.',\n    },\n    0x0268: {\n        Name: 'Nexa Trading AB',\n    },\n    0x0178: {\n        Name: 'Nexia Home Intelligence',\n    },\n    0x0075: {\n        Name: 'NextEnergy',\n    },\n    0x0312: {\n        Name: 'NIE Technology Co., Ltd',\n    },\n    0x0185: {\n        Name: 'Ningbo Sentek Electronics Co., Ltd',\n    },\n    0x014F: {\n        Name: 'Nortek Security &amp; Control LLC ',\n    },\n    0x0252: {\n        Name: 'North China University of Technology',\n    },\n    0x0096: {\n        Name: 'NorthQ',\n    },\n    0x0040: {\n        Name: 'Novar Electrical Devices and Systems (EDS)',\n    },\n    0x020D: {\n        Name: 'Novateqni HK Ltd',\n    },\n    0x0296: {\n        Name: 'OBLO LIVING LLC',\n    },\n    0x0119: {\n        Name: 'Omnima Limited',\n    },\n    0x014C: {\n        Name: 'OnSite Pro',\n    },\n    0x0041: {\n        Name: 'OpenPeak Inc.',\n    },\n    0x027D: {\n        Name: 'Oregon Automation ',\n    },\n    0x0104: {\n        Name: 'Panasonic Electric Works Co., Ltd.',\n    },\n    0x031A: {\n        Name: 'Panasonic ES Shin Dong-A Co., Ltd',\n    },\n    0x028D: {\n        Name: 'Panodic Electric (Shenzhen) Limited',\n    },\n    0x0257: {\n        Name: 'PARATECH',\n    },\n    0x0172: {\n        Name: 'PassivSystems Limited',\n    },\n    0x0322: {\n        Name: 'Paxton Access Ltd',\n    },\n    0x0281: {\n        Name: 'PC Partner',\n    },\n    0x013D: {\n        Name: 'Pella',\n    },\n    0x0245: {\n        Name: 'permundo GmbH',\n    },\n    0x013C: {\n        Name: 'Philio Technology Corp',\n    },\n    0x0277: {\n        Name: 'Pixela Corporation ',\n    },\n    0x010E: {\n        Name: 'Danalock',\n    },\n    0x0170: {\n        Name: 'Powerhouse Dynamics',\n    },\n    0x0074: {\n        Name: 'PowerLinx',\n    },\n    0x0016: {\n        Name: 'PowerLynx',\n    },\n    0x0042: {\n        Name: 'Pragmatic Consulting Inc.',\n    },\n    0x0128: {\n        Name: 'Prodrive Technologies',\n    },\n    0x0161: {\n        Name: 'Promixis, LLC',\n    },\n    0x005D: {\n        Name: 'Pulse Technologies (Aspalis)',\n    },\n    0x012A: {\n        Name: 'Qolsys',\n    },\n    0x0130: {\n        Name: 'Quby',\n    },\n    0x0163: {\n        Name: 'Queenlock Ind. Co., Ltd.',\n    },\n    0x0314: {\n        Name: 'Raonix Co., Ltd.',\n    },\n    0x021E: {\n        Name: 'Red Bee Co. Ltd',\n    },\n    0x022C: {\n        Name: 'Remote Solution',\n    },\n    0x0255: {\n        Name: 'Remote Technologies Incorporated',\n    },\n    0x0010: {\n        Name: 'Residential Control Systems, Inc. (RCS)',\n    },\n    0x0216: {\n        Name: 'RET Nanjing Intelligence System CO.,Ltd',\n    },\n    0x0153: {\n        Name: 'Revolv Inc',\n    },\n    0x023B: {\n        Name: 'ROC-Connect, Inc.',\n    },\n    0x0197: {\n        Name: 'RPE Ajax LLC (dbs Secur Ltd)',\n    },\n    0x0065: {\n        Name: 'RS Scene Automation',\n    },\n    0x029D: {\n        Name: 'Rubetek',\n    },\n    0x0290: {\n        Name: 'S1',\n    },\n    0x023C: {\n        Name: 'SafeTech Products',\n    },\n    0x0201: {\n        Name: 'Samsung Electronics Co., Ltd.',\n    },\n    0x022E: {\n        Name: 'Samsung SDS',\n    },\n    0x0093: {\n        Name: 'San Shih Electrical Enterprise Co., Ltd.',\n    },\n    0x012C: {\n        Name: 'SANAV',\n    },\n    0x0307: {\n        Name: 'SATCO Products, Inc. ',\n    },\n    0x0318: {\n        Name: 'SBCK Corp. ',\n    },\n    0x001F: {\n        Name: 'Scientia Technologies, Inc.',\n    },\n    0x029A: {\n        Name: 'Scout Alarm',\n    },\n    0x011E: {\n        Name: 'Secure Wireless',\n    },\n    0x0167: {\n        Name: 'SecureNet Technologies',\n    },\n    0x0182: {\n        Name: 'Securifi Ltd.',\n    },\n    0x0069: {\n        Name: 'Seluxit',\n    },\n    0x0043: {\n        Name: 'Senmatic A/S',\n    },\n    0x019A: {\n        Name: 'Sensative AB',\n    },\n    0x0044: {\n        Name: 'Sequoia Technology LTD',\n    },\n    0x0151: {\n        Name: 'Sercomm Corp',\n    },\n    0x030B: {\n        Name: 'Shandong Smart Life Data System Co .LTD',\n    },\n    0x0215: {\n        Name: 'Shangdong Smart Life Data System Co.,Ltd',\n    },\n    0x023E: {\n        Name: 'Shanghai Dorlink Intelligent Technologies Co.,Ltd',\n    },\n    0x0205: {\n        Name: 'Shanghai Longchuang Eco-energy Systems Co., Ltd',\n    },\n    0x010B: {\n        Name: 'Sharp',\n    },\n    0x021A: {\n        Name: 'SHENZHEN AOYA INDUSTRY CO. LTD',\n    },\n    0x0286: {\n        Name: 'Shenzhen Easyhome Technology Co., Ltd.',\n    },\n    0x021C: {\n        Name: 'Shenzhen iSurpass Technology Co. ,Ltd',\n    },\n    0x021D: {\n        Name: 'Shenzhen Kaadas Intelligent Technology Co., Ltd',\n    },\n    0x0211: {\n        Name: 'Shenzhen Liao Wang Tong Da Technology Ltd',\n    },\n    0x0258: {\n        Name: 'Shenzhen Neo Electronics Co., Ltd',\n    },\n    0x0250: {\n        Name: 'Shenzhen Tripath Digital Audio Equipment Co.,Ltd',\n    },\n    0x0260: {\n        Name: 'Shenzhen Heiman Technology Co., Ltd',\n    },\n    0x032C: {\n        Name: 'Shenzhen Saykey Technology Co., Ltd ',\n    },\n    0x0267: {\n        Name: 'SimonTech S.L.U',\n    },\n    0x0045: {\n        Name: 'Sine Wireless',\n    },\n    0x0266: {\n        Name: 'Siterwell Technology HK Co., LTD ',\n    },\n    0x0282: {\n        Name: 'Smart Electronic Industrial (Dongguan) Co., Limited',\n    },\n    0x0046: {\n        Name: 'Smart Products, Inc.',\n    },\n    0x026A: {\n        Name: 'SmartAll Inc.',\n    },\n    0x0323: {\n        Name: 'SmartHome Partner GmbH',\n    },\n    0x024F: {\n        Name: 'Smartly AS',\n    },\n    0x0150: {\n        Name: 'SmartThings, Inc.',\n    },\n    0x0102: {\n        Name: 'SMK Manufacturing Inc.',\n    },\n    0x029C: {\n        Name: 'SoftAtHome',\n    },\n    0x0047: {\n        Name: 'Somfy',\n    },\n    0x0274: {\n        Name: 'Soosan Hometech',\n    },\n    0x0090: {\n        Name: 'Spectrum Brands',\n    },\n    0x026E: {\n        Name: 'Springs Window Fashions',\n    },\n    0x026F: {\n        Name: 'Sprue Safety Products Ltd',\n    },\n    0x0124: {\n        Name: 'Square Connect',\n    },\n    0x021B: {\n        Name: 'ST&amp;T Electric Corporation',\n    },\n    0x0259: {\n        Name: 'Starkoff',\n    },\n    0x0265: {\n        Name: 'StarVedia',\n    },\n    0x0271: {\n        Name: 'STEINEL GmbH ',\n    },\n    0x0239: {\n        Name: 'Stelpro',\n    },\n    0x0217: {\n        Name: 'Strattec Advanced Logic,LLC',\n    },\n    0x0168: {\n        Name: 'STRATTEC Security Corporation',\n    },\n    0x0105: {\n        Name: 'Sumitomo',\n    },\n    0x028B: {\n        Name: 'Sunjet Components Corp.',\n    },\n    0x0054: {\n        Name: 'Superna',\n    },\n    0x0191: {\n        Name: 'Swann Communications Pty Ltd',\n    },\n    0x0009: {\n        Name: 'Sylvania',\n    },\n    0x0136: {\n        Name: 'Systech Corporation',\n    },\n    0x0276: {\n        Name: 'Systemair Sverige AB',\n    },\n    0x0235: {\n        Name: 'TAEWON Lighting Co., Ltd.',\n    },\n    0x0262: {\n        Name: 'Taiwan Fu Hsing Industrial Co., Ltd.',\n    },\n    0x0264: {\n        Name: 'Taiwan iCATCH Inc.',\n    },\n    0x0186: {\n        Name: 'Team Digital Limited',\n    },\n    0x0089: {\n        Name: 'Team Precision PCL',\n    },\n    0x0240: {\n        Name: 'Technicolor',\n    },\n    0x000A: {\n        Name: 'Techniku',\n    },\n    0x012F: {\n        Name: 'Tecom Co., Ltd.',\n    },\n    0x0176: {\n        Name: 'Telldus Technologies AB',\n    },\n    0x0048: {\n        Name: 'Telsey',\n    },\n    0x017E: {\n        Name: 'Telular',\n    },\n    0x005C: {\n        Name: 'Terra Optima B.V. (tidligere Primair Services)',\n    },\n    0x010C: {\n        Name: 'There Corporation',\n    },\n    0x019B: {\n        Name: 'HeatIt',\n    },\n    0x0317: {\n        Name: 'Think Simple srl',\n    },\n    0x022A: {\n        Name: 'TIMEVALVE, Inc.',\n    },\n    0x0118: {\n        Name: 'TKB Home',\n    },\n    0x011C: {\n        Name: 'TKH Group / Eminent',\n    },\n    0x0327: {\n        Name: 'TMC Technology Ltd.',\n    },\n    0x0319: {\n        Name: 'Toledo &amp; Co., Inc.',\n    },\n    0x0283: {\n        Name: 'TP-Link Technologies Co., Ltd.',\n    },\n    0x008B: {\n        Name: 'Trane Corporation',\n    },\n    0x0055: {\n        Name: 'Tridium',\n    },\n    0x0111: {\n        Name: 'Tronico Technology Co. Ltd.',\n    },\n    0x0049: {\n        Name: 'Twisthink',\n    },\n    0x0152: {\n        Name: 'UFairy G.R. Tech',\n    },\n    0x0193: {\n        Name: 'Universal Devices, Inc',\n    },\n    0x0183: {\n        Name: 'Universe Future',\n    },\n    0x0209: {\n        Name: 'UTC Fire and Security Americas Corp',\n    },\n    0x010A: {\n        Name: 'VDA',\n    },\n    0x030F: {\n        Name: 'Vemmio',\n    },\n    0x0198: {\n        Name: 'Venstar Inc.',\n    },\n    0x0237: {\n        Name: 'Vestel Elektronik Ticaret ve Sanayi A.S.',\n    },\n    0x0053: {\n        Name: 'Viewsonic',\n    },\n    0x005E: {\n        Name: 'ViewSonic Corporation',\n    },\n    0x0007: {\n        Name: 'Vimar CRS',\n    },\n    0x0188: {\n        Name: 'Vipa-Star',\n    },\n    0x004A: {\n        Name: 'Visualize',\n    },\n    0x0058: {\n        Name: 'Vitelec',\n    },\n    0x0263: {\n        Name: 'Viva Labs AS',\n    },\n    0x0156: {\n        Name: 'Vivint',\n    },\n    0x017B: {\n        Name: 'Vs-Safety AS',\n    },\n    0x004B: {\n        Name: 'Watt Stopper',\n    },\n    0x0008: {\n        Name: 'Wayne Dalton',\n    },\n    0x019F: {\n        Name: 'Webee Life',\n    },\n    0x0171: {\n        Name: 'WeBeHome AB',\n    },\n    0x011A: {\n        Name: 'Wenzhou MTLC Electric Appliances Co.,Ltd.',\n    },\n    0x026C: {\n        Name: 'Westcontrol AS',\n    },\n    0x0057: {\n        Name: 'Whirlpool',\n    },\n    0x027B: {\n        Name: 'White Rabbit',\n    },\n    0x0149: {\n        Name: 'wiDom',\n    },\n    0x015D: {\n        Name: 'Willis Electric Co., Ltd.',\n    },\n    0x012D: {\n        Name: 'Wilshine Holding Co., Ltd',\n    },\n    0x017F: {\n        Name: 'Wink Inc.',\n    },\n    0x0242: {\n        Name: 'Winytechnology',\n    },\n    0x0199: {\n        Name: 'Wireless Maingate AB',\n    },\n    0x004C: {\n        Name: 'Woodward Labs',\n    },\n    0x0269: {\n        Name: 'WOOREE Lighting Co.,Ltd.',\n    },\n    0x0003: {\n        Name: 'Wr@p',\n    },\n    0x022F: {\n        Name: 'WRT Intelligent Technology CO., LTD.',\n    },\n    0x012E: {\n        Name: 'Wuhan NWD Technology Co., Ltd.',\n    },\n    0x004D: {\n        Name: 'Xanboo',\n    },\n    0x024E: {\n        Name: 'zConnect',\n    },\n    0x004E: {\n        Name: 'Zdata, LLC.',\n    },\n    0x016F: {\n        Name: 'Zhejiang Jiuxing Electric Co Ltd',\n    },\n    0x0131: {\n        Name: 'Zipato',\n    },\n    0x0120: {\n        Name: 'Zonoff',\n    },\n    0x027A: {\n        Name: 'Zooz',\n    },\n    0x031D: {\n        Name: 'Z-Wave Alliance',\n    },\n    0x004F: {\n        Name: 'Z-Wave Technologia',\n    },\n    0x0315: {\n        Name: 'zwaveproducts.com',\n    },\n    0x024D: {\n        Name: 'Z-works Inc.',\n    },\n    0x0021: {\n        Name: 'Zykronix',\n    },\n    0x0135: {\n        Name: 'ZyXEL',\n    },\n    0x0330: {\n        Name: 'Sunricher',\n    },\n    0x033A: {\n        Name: 'HELTUN',\n        Webpage: 'heltun.com',\n    }\n};\nexports.controller_vendor_ids = controller_vendor_ids;\n\n\n//# sourceURL=webpack://ControllerUiLib/./src/vendorIds.ts?")},831:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nObject.defineProperty(exports, "NIL", ({\n  enumerable: true,\n  get: function get() {\n    return _nil.default;\n  }\n}));\nObject.defineProperty(exports, "parse", ({\n  enumerable: true,\n  get: function get() {\n    return _parse.default;\n  }\n}));\nObject.defineProperty(exports, "stringify", ({\n  enumerable: true,\n  get: function get() {\n    return _stringify.default;\n  }\n}));\nObject.defineProperty(exports, "v1", ({\n  enumerable: true,\n  get: function get() {\n    return _v.default;\n  }\n}));\nObject.defineProperty(exports, "v3", ({\n  enumerable: true,\n  get: function get() {\n    return _v2.default;\n  }\n}));\nObject.defineProperty(exports, "v4", ({\n  enumerable: true,\n  get: function get() {\n    return _v3.default;\n  }\n}));\nObject.defineProperty(exports, "v5", ({\n  enumerable: true,\n  get: function get() {\n    return _v4.default;\n  }\n}));\nObject.defineProperty(exports, "validate", ({\n  enumerable: true,\n  get: function get() {\n    return _validate.default;\n  }\n}));\nObject.defineProperty(exports, "version", ({\n  enumerable: true,\n  get: function get() {\n    return _version.default;\n  }\n}));\n\nvar _v = _interopRequireDefault(__webpack_require__(518));\n\nvar _v2 = _interopRequireDefault(__webpack_require__(948));\n\nvar _v3 = _interopRequireDefault(__webpack_require__(73));\n\nvar _v4 = _interopRequireDefault(__webpack_require__(186));\n\nvar _nil = _interopRequireDefault(__webpack_require__(808));\n\nvar _version = _interopRequireDefault(__webpack_require__(775));\n\nvar _validate = _interopRequireDefault(__webpack_require__(37));\n\nvar _stringify = _interopRequireDefault(__webpack_require__(910));\n\nvar _parse = _interopRequireDefault(__webpack_require__(792));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//# sourceURL=webpack://ControllerUiLib/./node_modules/uuid/dist/commonjs-browser/index.js?')},311:(__unused_webpack_module,exports)=>{"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports["default"] = void 0;\n\n/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === \'string\') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = \'0123456789abcdef\';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nvar _default = md5;\nexports["default"] = _default;\n\n//# sourceURL=webpack://ControllerUiLib/./node_modules/uuid/dist/commonjs-browser/md5.js?')},140:(__unused_webpack_module,exports)=>{"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports["default"] = void 0;\nconst randomUUID = typeof crypto !== \'undefined\' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nvar _default = {\n  randomUUID\n};\nexports["default"] = _default;\n\n//# sourceURL=webpack://ControllerUiLib/./node_modules/uuid/dist/commonjs-browser/native.js?')},808:(__unused_webpack_module,exports)=>{"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports["default"] = void 0;\nvar _default = \'00000000-0000-0000-0000-000000000000\';\nexports["default"] = _default;\n\n//# sourceURL=webpack://ControllerUiLib/./node_modules/uuid/dist/commonjs-browser/nil.js?')},792:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports["default"] = void 0;\n\nvar _validate = _interopRequireDefault(__webpack_require__(37));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError(\'Invalid UUID\');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use "/" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nvar _default = parse;\nexports["default"] = _default;\n\n//# sourceURL=webpack://ControllerUiLib/./node_modules/uuid/dist/commonjs-browser/parse.js?')},656:(__unused_webpack_module,exports)=>{"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports["default"] = void 0;\nvar _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nexports["default"] = _default;\n\n//# sourceURL=webpack://ControllerUiLib/./node_modules/uuid/dist/commonjs-browser/regex.js?')},858:(__unused_webpack_module,exports)=>{"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports["default"] = rng;\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\n\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where "this" is a Crypto implementation.\n    getRandomValues = typeof crypto !== \'undefined\' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error(\'crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}\n\n//# sourceURL=webpack://ControllerUiLib/./node_modules/uuid/dist/commonjs-browser/rng.js?')},42:(__unused_webpack_module,exports)=>{"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports["default"] = void 0;\n\n// Adapted from Chris Veness\' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === \'string\') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nvar _default = sha1;\nexports["default"] = _default;\n\n//# sourceURL=webpack://ControllerUiLib/./node_modules/uuid/dist/commonjs-browser/sha1.js?')},910:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nexports.unsafeStringify = unsafeStringify;\n\nvar _validate = _interopRequireDefault(__webpack_require__(37));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nfunction unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports[\"default\"] = _default;\n\n//# sourceURL=webpack://ControllerUiLib/./node_modules/uuid/dist/commonjs-browser/stringify.js?")},518:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _rng = _interopRequireDefault(__webpack_require__(858));\n\nvar _stringify = __webpack_require__(910);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0, _stringify.unsafeStringify)(b);\n}\n\nvar _default = v1;\nexports[\"default\"] = _default;\n\n//# sourceURL=webpack://ControllerUiLib/./node_modules/uuid/dist/commonjs-browser/v1.js?")},948:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports["default"] = void 0;\n\nvar _v = _interopRequireDefault(__webpack_require__(25));\n\nvar _md = _interopRequireDefault(__webpack_require__(311));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0, _v.default)(\'v3\', 0x30, _md.default);\nvar _default = v3;\nexports["default"] = _default;\n\n//# sourceURL=webpack://ControllerUiLib/./node_modules/uuid/dist/commonjs-browser/v3.js?')},25:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.URL = exports.DNS = void 0;\nexports[\"default\"] = v35;\n\nvar _stringify = __webpack_require__(910);\n\nvar _parse = _interopRequireDefault(__webpack_require__(792));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0, _stringify.unsafeStringify)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}\n\n//# sourceURL=webpack://ControllerUiLib/./node_modules/uuid/dist/commonjs-browser/v35.js?")},73:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports["default"] = void 0;\n\nvar _native = _interopRequireDefault(__webpack_require__(140));\n\nvar _rng = _interopRequireDefault(__webpack_require__(858));\n\nvar _stringify = __webpack_require__(910);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options, buf, offset) {\n  if (_native.default.randomUUID && !buf && !options) {\n    return _native.default.randomUUID();\n  }\n\n  options = options || {};\n\n  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0, _stringify.unsafeStringify)(rnds);\n}\n\nvar _default = v4;\nexports["default"] = _default;\n\n//# sourceURL=webpack://ControllerUiLib/./node_modules/uuid/dist/commonjs-browser/v4.js?')},186:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports["default"] = void 0;\n\nvar _v = _interopRequireDefault(__webpack_require__(25));\n\nvar _sha = _interopRequireDefault(__webpack_require__(42));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0, _v.default)(\'v5\', 0x50, _sha.default);\nvar _default = v5;\nexports["default"] = _default;\n\n//# sourceURL=webpack://ControllerUiLib/./node_modules/uuid/dist/commonjs-browser/v5.js?')},37:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports["default"] = void 0;\n\nvar _regex = _interopRequireDefault(__webpack_require__(656));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validate(uuid) {\n  return typeof uuid === \'string\' && _regex.default.test(uuid);\n}\n\nvar _default = validate;\nexports["default"] = _default;\n\n//# sourceURL=webpack://ControllerUiLib/./node_modules/uuid/dist/commonjs-browser/validate.js?')},775:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports["default"] = void 0;\n\nvar _validate = _interopRequireDefault(__webpack_require__(37));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError(\'Invalid UUID\');\n  }\n\n  return parseInt(uuid.slice(14, 15), 16);\n}\n\nvar _default = version;\nexports["default"] = _default;\n\n//# sourceURL=webpack://ControllerUiLib/./node_modules/uuid/dist/commonjs-browser/version.js?')},968:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  html_modal: () => (/* binding */ html_modal)\n});\n\n;// CONCATENATED MODULE: ./src/modal.html\n// Module\nvar code = "<section> <section class=\\"ZUnoRazberryModalContentSectionButton\\"> <button title=\\"Copy the log to clipboard\\" type=\\"button\\" data-click=\\"_copy()\\">Copy</button> <button title=\\"Closes and stops working with the com port\\" type=\\"button\\" data-click=\\"_close()\\">Close</button> </section> <section class=\\"ZUnoRazberryModalContentSection_table\\"> <h3>Log</h3> <section class=\\"ZUnoRazberryModalContentSectionLog_section_txt\\"></section> </section> <section style=\\"display:none\\" data-id_controller_info class=\\"ZUnoRazberryModalContentSection_table\\"> <h3>Controller Info</h3> <table> <tbody></tbody> </table> </section> <section style=\\"display:none\\" data-id_license_info class=\\"ZUnoRazberryModalContentSection_table\\"> <h3>License Info</h3> <table> <tbody></tbody> </table> </section> </section>";\n// Exports\n/* harmony default export */ const modal = (code);\n;// CONCATENATED MODULE: ./src/modal.js\n\n\nconst html_modal = modal;\n\n\n\n//# sourceURL=webpack://ControllerUiLib/./src/modal.js_+_1_modules?')}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var a=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e].call(a.exports,a,a.exports,__webpack_require__),a.exports}__webpack_require__.d=(e,n)=>{for(var a in n)__webpack_require__.o(n,a)&&!__webpack_require__.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:n[a]})},__webpack_require__.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__(783);return __webpack_exports__})()));